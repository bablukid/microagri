<?php
/**
 * Generated by Haxe 4.0.0-rc.1+1fdd3d5
 */

namespace haxe\xml;

use \php\Boot;

class XmlParserException {
	/**
	 * @var int
	 * the line number at which the XML parsing error occurred
	 */
	public $lineNumber;
	/**
	 * @var string
	 * the XML parsing error message
	 */
	public $message;
	/**
	 * @var int
	 * the character position in the XML string at which the parsing error occurred
	 */
	public $position;
	/**
	 * @var int
	 * the character position in the reported line at which the parsing error occurred
	 */
	public $positionAtLine;
	/**
	 * @var string
	 * the invalid XML string
	 */
	public $xml;

	/**
	 * @param string $message
	 * @param string $xml
	 * @param int $position
	 * 
	 * @return void
	 */
	public function __construct ($message, $xml, $position) {
		#/home/bubar/haxe/versions/4.0.0-rc.1/std/haxe/xml/Parser.hx:78: characters 3-17
		$this->xml = $xml;
		#/home/bubar/haxe/versions/4.0.0-rc.1/std/haxe/xml/Parser.hx:79: characters 3-25
		$this->message = $message;
		#/home/bubar/haxe/versions/4.0.0-rc.1/std/haxe/xml/Parser.hx:80: characters 3-27
		$this->position = $position;
		#/home/bubar/haxe/versions/4.0.0-rc.1/std/haxe/xml/Parser.hx:81: characters 3-17
		$this->lineNumber = 1;
		#/home/bubar/haxe/versions/4.0.0-rc.1/std/haxe/xml/Parser.hx:82: characters 3-21
		$this->positionAtLine = 0;
		#/home/bubar/haxe/versions/4.0.0-rc.1/std/haxe/xml/Parser.hx:84: lines 84-93
		$_g = 0;
		$_g1 = $position;
		while ($_g < $_g1) {
			$i = $_g++;
			#/home/bubar/haxe/versions/4.0.0-rc.1/std/haxe/xml/Parser.hx:86: characters 4-30
			$c = \StringTools::fastCodeAt($xml, $i);
			#/home/bubar/haxe/versions/4.0.0-rc.1/std/haxe/xml/Parser.hx:87: lines 87-92
			if ($c === 10) {
				#/home/bubar/haxe/versions/4.0.0-rc.1/std/haxe/xml/Parser.hx:88: characters 5-17
				$this->lineNumber++;
				#/home/bubar/haxe/versions/4.0.0-rc.1/std/haxe/xml/Parser.hx:89: characters 5-23
				$this->positionAtLine = 0;
			} else if ($c !== 13) {
				#/home/bubar/haxe/versions/4.0.0-rc.1/std/haxe/xml/Parser.hx:91: characters 25-41
				$this->positionAtLine++;
			}
		}

	}

	/**
	 * @return string
	 */
	public function toString () {
		#/home/bubar/haxe/versions/4.0.0-rc.1/std/haxe/xml/Parser.hx:98: characters 3-120
		return (\Type::getClassName(\Type::getClass($this))??'null') . ": " . ($this->message??'null') . " at line " . ($this->lineNumber??'null') . " char " . ($this->positionAtLine??'null');
	}

	public function __toString() {
		return $this->toString();
	}
}

Boot::registerClass(XmlParserException::class, 'haxe.xml.XmlParserException');
