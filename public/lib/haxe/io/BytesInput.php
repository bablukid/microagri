<?php
/**
 * Generated by Haxe 4.0.0-rc.1+1fdd3d5
 */

namespace haxe\io;

use \haxe\io\_BytesData\Container;
use \php\Boot;
use \php\_Boot\HxException;

class BytesInput extends Input {
	/**
	 * @var Container
	 */
	public $b;
	/**
	 * @var int
	 */
	public $len;
	/**
	 * @var int
	 */
	public $pos;
	/**
	 * @var int
	 */
	public $totlen;

	/**
	 * @param Bytes $b
	 * @param int $pos
	 * @param int $len
	 * 
	 * @return void
	 */
	public function __construct ($b, $pos = null, $len = null) {
		#/home/bubar/haxe/versions/4.0.0-rc.1/std/php/_std/haxe/io/BytesInput.hx:37: characters 3-28
		if ($pos === null) {
			#/home/bubar/haxe/versions/4.0.0-rc.1/std/php/_std/haxe/io/BytesInput.hx:37: characters 21-28
			$pos = 0;
		}
		#/home/bubar/haxe/versions/4.0.0-rc.1/std/php/_std/haxe/io/BytesInput.hx:38: characters 3-41
		if ($len === null) {
			#/home/bubar/haxe/versions/4.0.0-rc.1/std/php/_std/haxe/io/BytesInput.hx:38: characters 21-41
			$len = $b->length - $pos;
		}
		#/home/bubar/haxe/versions/4.0.0-rc.1/std/php/_std/haxe/io/BytesInput.hx:39: characters 3-57
		if (($pos < 0) || ($len < 0) || (($pos + $len) > $b->length)) {
			#/home/bubar/haxe/versions/4.0.0-rc.1/std/php/_std/haxe/io/BytesInput.hx:39: characters 52-57
			throw new HxException(Error::OutsideBounds());
		}
		#/home/bubar/haxe/versions/4.0.0-rc.1/std/php/_std/haxe/io/BytesInput.hx:41: characters 3-23
		$this->b = $b->b;
		#/home/bubar/haxe/versions/4.0.0-rc.1/std/php/_std/haxe/io/BytesInput.hx:42: characters 3-17
		$this->pos = $pos;
		#/home/bubar/haxe/versions/4.0.0-rc.1/std/php/_std/haxe/io/BytesInput.hx:43: characters 3-17
		$this->len = $len;
		#/home/bubar/haxe/versions/4.0.0-rc.1/std/php/_std/haxe/io/BytesInput.hx:44: characters 3-20
		$this->totlen = $len;
	}

	/**
	 * @return int
	 */
	public function readByte () {
		#/home/bubar/haxe/versions/4.0.0-rc.1/std/php/_std/haxe/io/BytesInput.hx:63: characters 3-23
		if ($this->len === 0) {
			#/home/bubar/haxe/versions/4.0.0-rc.1/std/php/_std/haxe/io/BytesInput.hx:63: characters 18-23
			throw new HxException(new Eof());
		}
		#/home/bubar/haxe/versions/4.0.0-rc.1/std/php/_std/haxe/io/BytesInput.hx:64: characters 3-8
		--$this->len;
		#/home/bubar/haxe/versions/4.0.0-rc.1/std/php/_std/haxe/io/BytesInput.hx:65: characters 10-18
		return ord($this->b->s[$this->pos++]);
	}

	/**
	 * @param Bytes $buf
	 * @param int $pos
	 * @param int $len
	 * 
	 * @return int
	 */
	public function readBytes ($buf, $pos, $len) {
		#/home/bubar/haxe/versions/4.0.0-rc.1/std/php/_std/haxe/io/BytesInput.hx:69: lines 69-70
		if (($pos < 0) || ($len < 0) || (($pos + $len) > $buf->length)) {
			#/home/bubar/haxe/versions/4.0.0-rc.1/std/php/_std/haxe/io/BytesInput.hx:70: characters 4-9
			throw new HxException(Error::OutsideBounds());
		}
		#/home/bubar/haxe/versions/4.0.0-rc.1/std/php/_std/haxe/io/BytesInput.hx:71: lines 71-72
		if (($this->len === 0) && ($len > 0)) {
			#/home/bubar/haxe/versions/4.0.0-rc.1/std/php/_std/haxe/io/BytesInput.hx:72: characters 4-9
			throw new HxException(new Eof());
		}
		#/home/bubar/haxe/versions/4.0.0-rc.1/std/php/_std/haxe/io/BytesInput.hx:73: lines 73-74
		if ($this->len < $len) {
			#/home/bubar/haxe/versions/4.0.0-rc.1/std/php/_std/haxe/io/BytesInput.hx:74: characters 4-18
			$len = $this->len;
		}
		#/home/bubar/haxe/versions/4.0.0-rc.1/std/php/_std/haxe/io/BytesInput.hx:75: characters 3-44
		$this1 = $buf->b;
		$src = $this->b;
		$srcpos = $this->pos;
		$this1->s = ((substr($this1->s, 0, $pos) . substr($src->s, $srcpos, $len)) . substr($this1->s, $pos + $len));

		#/home/bubar/haxe/versions/4.0.0-rc.1/std/php/_std/haxe/io/BytesInput.hx:76: characters 3-18
		$this->pos += $len;
		#/home/bubar/haxe/versions/4.0.0-rc.1/std/php/_std/haxe/io/BytesInput.hx:77: characters 3-18
		$this->len -= $len;
		#/home/bubar/haxe/versions/4.0.0-rc.1/std/php/_std/haxe/io/BytesInput.hx:79: characters 3-13
		return $len;
	}

	/**
	 * @param int $p
	 * 
	 * @return int
	 */
	public function set_position ($p) {
		#/home/bubar/haxe/versions/4.0.0-rc.1/std/php/_std/haxe/io/BytesInput.hx:56: lines 56-57
		if ($p < 0) {
			#/home/bubar/haxe/versions/4.0.0-rc.1/std/php/_std/haxe/io/BytesInput.hx:56: characters 15-20
			$p = 0;
		} else if ($p > $this->totlen) {
			#/home/bubar/haxe/versions/4.0.0-rc.1/std/php/_std/haxe/io/BytesInput.hx:57: characters 25-35
			$p = $this->totlen;
		}
		#/home/bubar/haxe/versions/4.0.0-rc.1/std/php/_std/haxe/io/BytesInput.hx:58: characters 3-19
		$this->len = $this->totlen - $p;
		#/home/bubar/haxe/versions/4.0.0-rc.1/std/php/_std/haxe/io/BytesInput.hx:59: characters 3-17
		return $this->pos = $p;
	}
}

Boot::registerClass(BytesInput::class, 'haxe.io.BytesInput');
Boot::registerSetters('haxe\\io\\BytesInput', [
	'position' => true
]);
