<?php
/**
 * Generated by Haxe 4.0.0-rc.1+1fdd3d5
 */

namespace haxe\web;

use \php\Boot;
use \php\_Boot\HxEnum;

class DispatchRule extends HxEnum {
	/**
	 * @param DispatchRule $r
	 * @param \Array_hx $args
	 * @param bool $opt
	 * 
	 * @return DispatchRule
	 */
	static public function DRArgs ($r, $args, $opt) {
		return new DispatchRule('DRArgs', 2, [$r, $args, $opt]);
	}

	/**
	 * @param MatchRule $r
	 * 
	 * @return DispatchRule
	 */
	static public function DRMatch ($r) {
		return new DispatchRule('DRMatch', 0, [$r]);
	}

	/**
	 * @param DispatchRule $r
	 * 
	 * @return DispatchRule
	 */
	static public function DRMeta ($r) {
		return new DispatchRule('DRMeta', 3, [$r]);
	}

	/**
	 * @param \Array_hx $r
	 * 
	 * @return DispatchRule
	 */
	static public function DRMult ($r) {
		return new DispatchRule('DRMult', 1, [$r]);
	}

	/**
	 * Returns array of (constructorIndex => constructorName)
	 *
	 * @return string[]
	 */
	static public function __hx__list () {
		return [
			2 => 'DRArgs',
			0 => 'DRMatch',
			3 => 'DRMeta',
			1 => 'DRMult',
		];
	}

	/**
	 * Returns array of (constructorName => parametersCount)
	 *
	 * @return int[]
	 */
	static public function __hx__paramsCount () {
		return [
			'DRArgs' => 3,
			'DRMatch' => 1,
			'DRMeta' => 1,
			'DRMult' => 1,
		];
	}
}

Boot::registerClass(DispatchRule::class, 'haxe.web.DispatchRule');
