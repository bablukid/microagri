<?php
/**
 * Generated by Haxe 4.0.0-rc.1+1fdd3d5
 */

namespace haxe\web;

use \php\Boot;
use \php\_Boot\HxEnum;

class MatchRule extends HxEnum {
	/**
	 * @return MatchRule
	 */
	static public function MRBool () {
		static $inst = null;
		if (!$inst) $inst = new MatchRule('MRBool', 1, []);
		return $inst;
	}

	/**
	 * @return MatchRule
	 */
	static public function MRDate () {
		static $inst = null;
		if (!$inst) $inst = new MatchRule('MRDate', 4, []);
		return $inst;
	}

	/**
	 * @return MatchRule
	 */
	static public function MRDispatch () {
		static $inst = null;
		if (!$inst) $inst = new MatchRule('MRDispatch', 6, []);
		return $inst;
	}

	/**
	 * @param string $e
	 * 
	 * @return MatchRule
	 */
	static public function MREnum ($e) {
		return new MatchRule('MREnum', 5, [$e]);
	}

	/**
	 * @return MatchRule
	 */
	static public function MRFloat () {
		static $inst = null;
		if (!$inst) $inst = new MatchRule('MRFloat', 2, []);
		return $inst;
	}

	/**
	 * @return MatchRule
	 */
	static public function MRInt () {
		static $inst = null;
		if (!$inst) $inst = new MatchRule('MRInt', 0, []);
		return $inst;
	}

	/**
	 * @param MatchRule $r
	 * 
	 * @return MatchRule
	 */
	static public function MROpt ($r) {
		return new MatchRule('MROpt', 8, [$r]);
	}

	/**
	 * @param string $c
	 * @param bool $lock
	 * 
	 * @return MatchRule
	 */
	static public function MRSpod ($c, $lock) {
		return new MatchRule('MRSpod', 7, [$c, $lock]);
	}

	/**
	 * @return MatchRule
	 */
	static public function MRString () {
		static $inst = null;
		if (!$inst) $inst = new MatchRule('MRString', 3, []);
		return $inst;
	}

	/**
	 * Returns array of (constructorIndex => constructorName)
	 *
	 * @return string[]
	 */
	static public function __hx__list () {
		return [
			1 => 'MRBool',
			4 => 'MRDate',
			6 => 'MRDispatch',
			5 => 'MREnum',
			2 => 'MRFloat',
			0 => 'MRInt',
			8 => 'MROpt',
			7 => 'MRSpod',
			3 => 'MRString',
		];
	}

	/**
	 * Returns array of (constructorName => parametersCount)
	 *
	 * @return int[]
	 */
	static public function __hx__paramsCount () {
		return [
			'MRBool' => 0,
			'MRDate' => 0,
			'MRDispatch' => 0,
			'MREnum' => 1,
			'MRFloat' => 0,
			'MRInt' => 0,
			'MROpt' => 1,
			'MRSpod' => 2,
			'MRString' => 0,
		];
	}
}

Boot::registerClass(MatchRule::class, 'haxe.web.MatchRule');
