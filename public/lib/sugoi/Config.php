<?php
/**
 * Generated by Haxe 4.0.0-rc.1+1fdd3d5
 */

namespace sugoi;

use \php\Boot;
use \sys\io\File;
use \php\_Boot\HxString;
use \php\_Boot\HxException;

class Config {
	/**
	 * @var string
	 */
	public $DATA_HOST;
	/**
	 * @var bool
	 */
	public $DEBUG;
	/**
	 * @var string
	 */
	public $HOST;
	/**
	 * @var string
	 */
	public $KEY;
	/**
	 * @var string
	 */
	public $LANG;
	/**
	 * @var \Array_hx
	 */
	public $LANGS;
	/**
	 * @var string
	 */
	public $NAME;
	/**
	 * @var string
	 */
	public $PATH;
	/**
	 * @var bool
	 */
	public $SQL_LOG;
	/**
	 * @var string
	 */
	public $TPL;
	/**
	 * @var string
	 */
	public $TPL_TMP;
	/**
	 * @var \Xml
	 */
	public $xml;

	/**
	 * @param string $path
	 * 
	 * @return void
	 */
	public function __construct ($path = null) {
		#/home/bubar/projects/sugoi/src/sugoi/Config.hx:22: characters 3-54
		$this->PATH = ($path !== null ? $path : (dirname($_SERVER["SCRIPT_FILENAME"])??'null') . "/" . "../");
		#/home/bubar/projects/sugoi/src/sugoi/Config.hx:24: characters 3-78
		$this->xml = \Xml::parse(File::getContent(($this->PATH??'null') . "config.xml"))->firstElement();
		#/home/bubar/projects/sugoi/src/sugoi/Config.hx:26: characters 3-21
		$this->LANG = $this->get("lang");
		#/home/bubar/projects/sugoi/src/sugoi/Config.hx:27: characters 3-34
		$this->LANGS = HxString::split($this->get("langs"), ";");
		#/home/bubar/projects/sugoi/src/sugoi/Config.hx:28: characters 3-40
		$this->TPL = ($this->PATH??'null') . "lang/" . ($this->LANG??'null') . "/tpl/";
		#/home/bubar/projects/sugoi/src/sugoi/Config.hx:29: characters 3-44
		$this->TPL_TMP = ($this->PATH??'null') . "lang/" . ($this->LANG??'null') . "/tmp/";
		#/home/bubar/projects/sugoi/src/sugoi/Config.hx:30: characters 3-34
		$this->DEBUG = $this->get("debug", "0") === "1";
		#/home/bubar/projects/sugoi/src/sugoi/Config.hx:31: characters 3-21
		$this->HOST = $this->get("host");
		#/home/bubar/projects/sugoi/src/sugoi/Config.hx:32: characters 3-21
		$this->NAME = $this->get("name");
		#/home/bubar/projects/sugoi/src/sugoi/Config.hx:33: characters 3-19
		$this->KEY = $this->get("key");
		#/home/bubar/projects/sugoi/src/sugoi/Config.hx:34: characters 3-43
		$this->DATA_HOST = $this->get("dataHost", "data." . ($this->HOST??'null'));
		#/home/bubar/projects/sugoi/src/sugoi/Config.hx:35: characters 3-37
		$this->SQL_LOG = $this->getBool("sqllog", false);
	}

	/**
	 * @param string $val
	 * 
	 * @return bool
	 */
	public function defined ($val) {
		#/home/bubar/projects/sugoi/src/sugoi/Config.hx:40: characters 3-30
		return $this->xml->get($val) !== null;
	}

	/**
	 * @param string $val
	 * @param string $def
	 * 
	 * @return string
	 */
	public function get ($val, $def = null) {
		#/home/bubar/projects/sugoi/src/sugoi/Config.hx:51: characters 3-24
		$v = $this->xml->get($val);
		#/home/bubar/projects/sugoi/src/sugoi/Config.hx:52: lines 52-53
		if ($v === null) {
			#/home/bubar/projects/sugoi/src/sugoi/Config.hx:53: characters 4-11
			$v = $def;
		}
		#/home/bubar/projects/sugoi/src/sugoi/Config.hx:54: lines 54-55
		if ($v === null) {
			#/home/bubar/projects/sugoi/src/sugoi/Config.hx:55: characters 4-9
			throw new HxException("Missing config attribute : '" . ($val??'null') . "'");
		}
		#/home/bubar/projects/sugoi/src/sugoi/Config.hx:56: characters 3-11
		return $v;
	}

	/**
	 * @param string $val
	 * @param bool $def
	 * 
	 * @return bool
	 */
	public function getBool ($val, $def = null) {
		#/home/bubar/projects/sugoi/src/sugoi/Config.hx:44: characters 3-20
		$v = $this->get($val);
		#/home/bubar/projects/sugoi/src/sugoi/Config.hx:45: characters 3-29
		if ($v === null) {
			#/home/bubar/projects/sugoi/src/sugoi/Config.hx:45: characters 19-29
			return $def;
		}
		#/home/bubar/projects/sugoi/src/sugoi/Config.hx:46: characters 9-36
		if ($v !== "1") {
			#/home/bubar/projects/sugoi/src/sugoi/Config.hx:46: characters 23-34
			return $v === "true";
		} else {
			#/home/bubar/projects/sugoi/src/sugoi/Config.hx:46: characters 9-36
			return true;
		}
	}

	/**
	 * @param string $val
	 * @param int $def
	 * 
	 * @return int
	 */
	public function getInt ($val, $def = null) {
		#/home/bubar/projects/sugoi/src/sugoi/Config.hx:60: characters 3-48
		return \Std::parseInt($this->get($val, \Std::string($def)));
	}
}

Boot::registerClass(Config::class, 'sugoi.Config');
