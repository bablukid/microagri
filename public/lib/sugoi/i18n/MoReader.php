<?php
/**
 * Generated by Haxe 4.0.0-rc.1+1fdd3d5
 */

namespace sugoi\i18n;

use \php\Boot;
use \haxe\io\BytesInput;
use \haxe\ds\StringMap;
use \php\_Boot\HxException;
use \haxe\io\Bytes;

/**
 * GNU GetText MO file reader
 * @doc https://www.gnu.org/software/gettext/manual/html_node/MO-Files.html
 */
class MoReader {
	/**
	 * @var int
	 */
	static public $MAGIC = -1794895138;
	/**
	 * @var int
	 */
	static public $MAGIC2 = -569244523;

	/**
	 * @var BytesInput
	 */
	public $data;
	/**
	 * @var int
	 */
	public $hash_num_entries;
	/**
	 * @var int
	 */
	public $hash_offset;
	/**
	 * @var int
	 */
	public $original_table_offset;
	/**
	 * @var int
	 */
	public $translated_table_offset;

	/**
	 * @param Bytes $data
	 * 
	 * @return void
	 */
	public function __construct ($data) {
		#/home/bubar/projects/sugoi/src/sugoi/i18n/GetText.hx:250: characters 3-43
		$this->data = new BytesInput($data);
	}

	/**
	 * @param int $index
	 * 
	 * @return string
	 */
	public function getOriginalString ($index) {
		#/home/bubar/projects/sugoi/src/sugoi/i18n/GetText.hx:286: characters 3-55
		return $this->getString($this->original_table_offset + 8 * $index);
	}

	/**
	 * @param int $offset
	 * 
	 * @return string
	 */
	public function getString ($offset) {
		#/home/bubar/projects/sugoi/src/sugoi/i18n/GetText.hx:290: characters 3-25
		$this->data->set_position($offset);
		#/home/bubar/projects/sugoi/src/sugoi/i18n/GetText.hx:291: characters 3-39
		$length = $this->data->readInt32();
		#/home/bubar/projects/sugoi/src/sugoi/i18n/GetText.hx:292: characters 3-36
		$pos = $this->data->readInt32();
		#/home/bubar/projects/sugoi/src/sugoi/i18n/GetText.hx:293: characters 3-22
		$this->data->set_position($pos);
		#/home/bubar/projects/sugoi/src/sugoi/i18n/GetText.hx:294: characters 3-53
		return $this->data->readString($length);
	}

	/**
	 * @param int $index
	 * 
	 * @return string
	 */
	public function getTranslatedString ($index) {
		#/home/bubar/projects/sugoi/src/sugoi/i18n/GetText.hx:282: characters 3-57
		return $this->getString($this->translated_table_offset + 8 * $index);
	}

	/**
	 * @return StringMap
	 */
	public function parse () {
		#/home/bubar/projects/sugoi/src/sugoi/i18n/GetText.hx:255: characters 3-16
		$d = $this->data;
		#/home/bubar/projects/sugoi/src/sugoi/i18n/GetText.hx:256: characters 3-37
		$header = $d->readInt32();
		#/home/bubar/projects/sugoi/src/sugoi/i18n/GetText.hx:258: lines 258-260
		if (($header !== MoReader::$MAGIC) && ($header !== MoReader::$MAGIC2)) {
			#/home/bubar/projects/sugoi/src/sugoi/i18n/GetText.hx:259: characters 36-42
			$int = $header;
			#/home/bubar/projects/sugoi/src/sugoi/i18n/GetText.hx:259: characters 4-9
			throw new HxException("Bad MO file header : " . (\Std::string(($int < 0 ? 4294967296.0 + $int : $int + 0.0))??'null'));
		}
		#/home/bubar/projects/sugoi/src/sugoi/i18n/GetText.hx:262: characters 3-37
		$revision = $d->readInt32();
		#/home/bubar/projects/sugoi/src/sugoi/i18n/GetText.hx:263: characters 7-19
		$aNeg = $revision < 0;
		$bNeg = 1 < 0;
		#/home/bubar/projects/sugoi/src/sugoi/i18n/GetText.hx:263: lines 263-265
		if (($aNeg !== $bNeg ? $aNeg : $revision > 1)) {
			#/home/bubar/projects/sugoi/src/sugoi/i18n/GetText.hx:264: characters 43-51
			$int1 = $revision;
			#/home/bubar/projects/sugoi/src/sugoi/i18n/GetText.hx:264: characters 4-9
			throw new HxException("Bad MO file format revision : " . (\Std::string(($int1 < 0 ? 4294967296.0 + $int1 : $int1 + 0.0))??'null'));
		}
		#/home/bubar/projects/sugoi/src/sugoi/i18n/GetText.hx:267: characters 3-40
		$num_strings = $d->readInt32();
		#/home/bubar/projects/sugoi/src/sugoi/i18n/GetText.hx:268: characters 3-39
		$this->original_table_offset = $d->readInt32();
		#/home/bubar/projects/sugoi/src/sugoi/i18n/GetText.hx:269: characters 3-42
		$this->translated_table_offset = $d->readInt32();
		#/home/bubar/projects/sugoi/src/sugoi/i18n/GetText.hx:270: characters 3-34
		$this->hash_num_entries = $d->readInt32();
		#/home/bubar/projects/sugoi/src/sugoi/i18n/GetText.hx:271: characters 3-29
		$this->hash_offset = $d->readInt32();
		#/home/bubar/projects/sugoi/src/sugoi/i18n/GetText.hx:273: characters 3-52
		$texts = new StringMap();
		#/home/bubar/projects/sugoi/src/sugoi/i18n/GetText.hx:274: lines 274-275
		$_g = 1;
		$_g1 = $num_strings;
		while ($_g < $_g1) {
			$i = $_g++;
			#/home/bubar/projects/sugoi/src/sugoi/i18n/GetText.hx:275: characters 4-61
			$key = $this->getOriginalString($i);
			$value = $this->getTranslatedString($i);
			$texts->data[$key] = $value;

		}

		#/home/bubar/projects/sugoi/src/sugoi/i18n/GetText.hx:277: characters 3-15
		return $texts;
	}
}

Boot::registerClass(MoReader::class, 'sugoi.i18n.MoReader');
