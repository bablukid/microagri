<?php
/**
 * Generated by Haxe 4.0.0-rc.1+1fdd3d5
 */

namespace sugoi\i18n;

use \php\Boot;
use \php\_Boot\HxString;
use \haxe\ds\StringMap;
use \haxe\io\Bytes;

class GetText {
	/**
	 * @var StringMap
	 */
	public $texts;

	/**
	 * @return void
	 */
	public function __construct () {
	}

	/**
	 * @return void
	 */
	public function emptyDictionary () {
		#/home/bubar/projects/sugoi/src/sugoi/i18n/GetText.hx:120: characters 3-20
		$this->texts = new StringMap();
	}

	/**
	 * @param string $str
	 * @param mixed $params
	 * 
	 * @return string
	 */
	public function get ($str, $params = null) {
		#/home/bubar/projects/sugoi/src/sugoi/i18n/GetText.hx:92: lines 92-95
		if ($this->texts === null) {
			#/home/bubar/projects/sugoi/src/sugoi/i18n/GetText.hx:94: characters 4-42
			$this->texts = new StringMap();
		}
		#/home/bubar/projects/sugoi/src/sugoi/i18n/GetText.hx:97: characters 9-48
		$str = rtrim((HxString::split($str, "||")->arr[0] ?? null));
		#/home/bubar/projects/sugoi/src/sugoi/i18n/GetText.hx:99: lines 99-101
		if (array_key_exists($str, $this->texts->data)) {
			#/home/bubar/projects/sugoi/src/sugoi/i18n/GetText.hx:100: characters 10-24
			$str = ($this->texts->data[$str] ?? null);
		}
		#/home/bubar/projects/sugoi/src/sugoi/i18n/GetText.hx:103: characters 3-30
		$list = HxString::split($str, "::");
		#/home/bubar/projects/sugoi/src/sugoi/i18n/GetText.hx:104: lines 104-109
		if ($params !== null) {
			#/home/bubar/projects/sugoi/src/sugoi/i18n/GetText.hx:106: lines 106-108
			$_g = 0;
			$_g1 = \Reflect::fields($params);
			while ($_g < $_g1->length) {
				#/home/bubar/projects/sugoi/src/sugoi/i18n/GetText.hx:106: characters 9-10
				$k = ($_g1->arr[$_g] ?? null);
				#/home/bubar/projects/sugoi/src/sugoi/i18n/GetText.hx:106: lines 106-108
				++$_g;
				#/home/bubar/projects/sugoi/src/sugoi/i18n/GetText.hx:107: characters 5-78
				$str = \StringTools::replace($str, "::" . ($k??'null') . "::", \Reflect::field($params, $k));
			}
		}
		#/home/bubar/projects/sugoi/src/sugoi/i18n/GetText.hx:110: characters 3-31
		return $str;
	}

	/**
	 * @param Bytes $data
	 * 
	 * @return void
	 */
	public function readMo ($data) {
		#/home/bubar/projects/sugoi/src/sugoi/i18n/GetText.hx:114: characters 3-31
		$r = new MoReader($data);
		#/home/bubar/projects/sugoi/src/sugoi/i18n/GetText.hx:115: characters 3-20
		$this->texts = $r->parse();
		#/home/bubar/projects/sugoi/src/sugoi/i18n/GetText.hx:116: characters 3-11
		$r = null;
	}

	/**
	 * @return string
	 */
	public function toString () {
		#/home/bubar/projects/sugoi/src/sugoi/i18n/GetText.hx:37: characters 3-19
		return "GetText";
	}

	/**
	 * @param mixed $str
	 * 
	 * @return string
	 */
	public function untranslated ($str) {
		#/home/bubar/projects/sugoi/src/sugoi/i18n/GetText.hx:41: characters 3-30
		return \Std::string($str);
	}

	public function __toString() {
		return $this->toString();
	}
}

Boot::registerClass(GetText::class, 'sugoi.i18n.GetText');
