<?php
/**
 * Generated by Haxe 4.0.0-rc.1+1fdd3d5
 */

namespace sugoi\db;

use \php\_Boot\HxAnon;
use \php\Boot;
use \sys\db\Object_hx;
use \sys\db\Manager;
use \db\User;

class Error extends Object_hx {
	/**
	 * @var Manager
	 */
	static public $manager;

	/**
	 * @var \Date
	 */
	public $date;
	/**
	 * @var string
	 */
	public $error;
	/**
	 * @var int
	 */
	public $id;
	/**
	 * @var string
	 */
	public $ip;
	/**
	 * @var mixed
	 */
	public $uid;
	/**
	 * @var string
	 */
	public $url;
	/**
	 * @var User
	 */
	public $user;
	/**
	 * @var string
	 */
	public $userAgent;

	/**
	 * @return void
	 */
	public function __construct () {
		#/home/bubar/projects/sugoi/src/sugoi/db/Error.hx:4: lines 4-16
		parent::__construct();
	}

	/**
	 * @return Manager
	 */
	public function __getManager () {
		#/home/bubar/projects/spod/src/sys/db/RecordMacros.hx:1432: characters 19-40
		return Error::$manager;
	}

	/**
	 * @return User
	 */
	public function get_user () {
		#/home/bubar/projects/sugoi/src/sugoi/db/Error.hx:10: characters 18-51
		return User::$manager->__hx__renamed__get($this, "user", "uid", false);
	}

	/**
	 * @param User $_v
	 * 
	 * @return User
	 */
	public function set_user ($_v) {
		return User::$manager->__hx__renamed__set($this, "user", "uid", $_v);
	}

	/**
	 * @internal
	 * @access private
	 */
	static public function __hx__init ()
	{
		static $called = false;
		if ($called) return;
		$called = true;


		self::$manager = new Manager(Boot::getClass(Error::class));
	}
}

Boot::registerClass(Error::class, 'sugoi.db.Error');
Boot::registerMeta(Error::class, new HxAnon(["obj" => new HxAnon(["rtti" => \Array_hx::wrap(["oy7:hfieldsby9:userAgentoy4:nameR1y1:tjy17:sys.db.RecordType:9:1i256y6:isNulltgy3:urloR2R6R3jR4:13:0R5tgy3:uidoR2R7R3jR4:1:0R5tgy2:ipoR2R8R3jR4:9:1i15R5tgy2:idoR2R9R3jR4:0:0R5fgy5:erroroR2R10R3jR4:15:0R5fgy4:dateoR2R11R3jR4:11:0R5fghR2y5:Errory9:relationsaoy6:moduley7:db.Usery7:cascadefy4:lockfy4:propy4:userR5ty4:typeR15y3:keyR7ghy7:indexesahy6:fieldsar10r14r12r8r2r4r6hR21aR9hg"])])]));
Boot::registerGetters('sugoi\\db\\Error', [
	'user' => true
]);
Boot::registerSetters('sugoi\\db\\Error', [
	'user' => true
]);
Error::__hx__init();
