<?php
/**
 * Generated by Haxe 4.0.0-rc.1+1fdd3d5
 */

namespace sugoi\mail;

use \php\_Boot\HxAnon;
use \php\Boot;
use \haxe\CallStack;
use \tink\core\TypedError;
use \sys\io\Process;
use \tink\core\Outcome;
use \haxe\Json;
use \haxe\ds\StringMap;
use \php\_Boot\HxException;
use \php\_NativeIndexedArray\NativeIndexedArrayIterator;

/**
 * Send an email via Mandrill.com API
 * @author fbarbut
 * @doc https://mandrillapp.com/api/docs/messages.JSON.html
 */
class MandrillMailer implements IMailer {
	/**
	 * @var mixed
	 */
	public $conf;

	/**
	 * @return void
	 */
	public function __construct () {
	}

	/**
	 * @param string $method
	 * @param string $url
	 * @param mixed $headers
	 * @param string $postData
	 * 
	 * @return mixed
	 */
	public function curlRequest ($method, $url, $headers = null, $postData) {
		#/home/bubar/projects/sugoi/src/sugoi/mail/MandrillMailer.hx:96: characters 3-49
		$cParams = \Array_hx::wrap([
			"-X" . ($method??'null'),
			"--max-time",
			"15",
		]);
		#/home/bubar/projects/sugoi/src/sugoi/mail/MandrillMailer.hx:97: lines 97-100
		$_g = 0;
		$_g1 = \Reflect::fields($headers);
		while ($_g < $_g1->length) {
			#/home/bubar/projects/sugoi/src/sugoi/mail/MandrillMailer.hx:97: characters 8-9
			$k = ($_g1->arr[$_g] ?? null);
			#/home/bubar/projects/sugoi/src/sugoi/mail/MandrillMailer.hx:97: lines 97-100
			++$_g;
			#/home/bubar/projects/sugoi/src/sugoi/mail/MandrillMailer.hx:98: characters 4-22
			$cParams->arr[$cParams->length] = "-H";
			++$cParams->length;

			#/home/bubar/projects/sugoi/src/sugoi/mail/MandrillMailer.hx:99: characters 4-49
			$x = ($k??'null') . ": " . (\Std::string(\Reflect::field($headers, $k))??'null');
			$cParams->arr[$cParams->length] = $x;
			++$cParams->length;

		}

		#/home/bubar/projects/sugoi/src/sugoi/mail/MandrillMailer.hx:101: characters 3-20
		$cParams->arr[$cParams->length] = $url;
		++$cParams->length;

		#/home/bubar/projects/sugoi/src/sugoi/mail/MandrillMailer.hx:102: lines 102-105
		if ($postData !== null) {
			#/home/bubar/projects/sugoi/src/sugoi/mail/MandrillMailer.hx:103: characters 4-22
			$cParams->arr[$cParams->length] = "-d";
			++$cParams->length;

			#/home/bubar/projects/sugoi/src/sugoi/mail/MandrillMailer.hx:104: characters 4-26
			$cParams->arr[$cParams->length] = $postData;
			++$cParams->length;

		}
		#/home/bubar/projects/sugoi/src/sugoi/mail/MandrillMailer.hx:107: characters 3-47
		$p = new Process("curl", $cParams);
		#/home/bubar/projects/sugoi/src/sugoi/mail/MandrillMailer.hx:113: characters 3-43
		$str = $p->stdout->readAll()->toString();
		#/home/bubar/projects/sugoi/src/sugoi/mail/MandrillMailer.hx:116: lines 116-122
		if (($str === null) || ($str === "")) {
			#/home/bubar/projects/sugoi/src/sugoi/mail/MandrillMailer.hx:120: characters 4-39
			$str = $p->stderr->readAll()->toString();
		}
		#/home/bubar/projects/sugoi/src/sugoi/mail/MandrillMailer.hx:124: characters 3-15
		$p->exitCode();
		#/home/bubar/projects/sugoi/src/sugoi/mail/MandrillMailer.hx:126: characters 3-13
		return $str;
	}

	/**
	 * @param mixed $c
	 * 
	 * @return IMailer
	 */
	public function init ($c = null) {
		#/home/bubar/projects/sugoi/src/sugoi/mail/MandrillMailer.hx:19: characters 3-11
		$this->conf = $c;
		#/home/bubar/projects/sugoi/src/sugoi/mail/MandrillMailer.hx:20: characters 3-14
		return $this;
	}

	/**
	 * @param IMail $m
	 * @param mixed $params
	 * @param \Closure $callback
	 * 
	 * @return void
	 */
	public function send ($m, $params = null, $callback = null) {
		#/home/bubar/projects/sugoi/src/sugoi/mail/MandrillMailer.hx:26: characters 3-24
		$headersObj = new HxAnon();
		#/home/bubar/projects/sugoi/src/sugoi/mail/MandrillMailer.hx:27: characters 3-32
		$headers = $m->getHeaders();
		#/home/bubar/projects/sugoi/src/sugoi/mail/MandrillMailer.hx:28: characters 12-26
		$k = new NativeIndexedArrayIterator(array_map("strval", array_keys($headers->data)));
		while ($k->hasNext()) {
			#/home/bubar/projects/sugoi/src/sugoi/mail/MandrillMailer.hx:28: lines 28-30
			$k1 = $k->next();
			#/home/bubar/projects/sugoi/src/sugoi/mail/MandrillMailer.hx:29: characters 4-51
			\Reflect::setField($headersObj, $k1, ($headers->data[$k1] ?? null));
		}

		#/home/bubar/projects/sugoi/src/sugoi/mail/MandrillMailer.hx:33: characters 9-23
		$data = Boot::dynamicField($this->conf, 'smtp_pass');
		#/home/bubar/projects/sugoi/src/sugoi/mail/MandrillMailer.hx:35: characters 12-27
		$data1 = $m->getHtmlBody();
		#/home/bubar/projects/sugoi/src/sugoi/mail/MandrillMailer.hx:36: characters 12-27
		$data2 = $m->getTextBody();
		#/home/bubar/projects/sugoi/src/sugoi/mail/MandrillMailer.hx:37: characters 15-29
		$data3 = $m->getSubject();
		#/home/bubar/projects/sugoi/src/sugoi/mail/MandrillMailer.hx:38: characters 18-37
		$data4 = $m->getSender()->email;
		#/home/bubar/projects/sugoi/src/sugoi/mail/MandrillMailer.hx:32: lines 32-44
		$data5 = new HxAnon([
			"key" => $data,
			"message" => new HxAnon([
				"html" => $data1,
				"text" => $data2,
				"subject" => $data3,
				"from_email" => $data4,
				"from_name" => $m->getSender()->name,
				"to" => new \Array_hx(),
				"headers" => $headersObj,
			]),
		]);
		#/home/bubar/projects/sugoi/src/sugoi/mail/MandrillMailer.hx:45: lines 45-47
		$_g = 0;
		$_g1 = $m->getRecipients();
		while ($_g < $_g1->length) {
			#/home/bubar/projects/sugoi/src/sugoi/mail/MandrillMailer.hx:45: characters 8-9
			$r = ($_g1->arr[$_g] ?? null);
			#/home/bubar/projects/sugoi/src/sugoi/mail/MandrillMailer.hx:45: lines 45-47
			++$_g;
			#/home/bubar/projects/sugoi/src/sugoi/mail/MandrillMailer.hx:46: characters 4-69
			$_this = $data5->message->to;
			$_this->arr[$_this->length] = new HxAnon([
				"email" => $r->email,
				"name" => $r->name,
				"type" => "to",
			]);
			++$_this->length;

		}

		#/home/bubar/projects/sugoi/src/sugoi/mail/MandrillMailer.hx:49: characters 91-116
		$raw = Json::phpJsonEncode($data5, null, null);
		#/home/bubar/projects/sugoi/src/sugoi/mail/MandrillMailer.hx:49: characters 3-118
		$raw1 = $this->curlRequest("POST", "https://mandrillapp.com/api/1.0/messages/send.json", new HxAnon(), $raw);
		#/home/bubar/projects/sugoi/src/sugoi/mail/MandrillMailer.hx:51: lines 51-91
		if ($callback !== null) {
			#/home/bubar/projects/sugoi/src/sugoi/mail/MandrillMailer.hx:53: characters 4-26
			if ($raw1 === null) {
				#/home/bubar/projects/sugoi/src/sugoi/mail/MandrillMailer.hx:53: characters 21-26
				throw new HxException("CURL response is null");
			}
			#/home/bubar/projects/sugoi/src/sugoi/mail/MandrillMailer.hx:54: characters 4-24
			if ($raw1 === "") {
				#/home/bubar/projects/sugoi/src/sugoi/mail/MandrillMailer.hx:54: characters 19-24
				throw new HxException("CURL response is empty");
			}
			#/home/bubar/projects/sugoi/src/sugoi/mail/MandrillMailer.hx:55: characters 4-49
			$apiResult = null;
			#/home/bubar/projects/sugoi/src/sugoi/mail/MandrillMailer.hx:56: lines 56-61
			try {
				#/home/bubar/projects/sugoi/src/sugoi/mail/MandrillMailer.hx:57: characters 5-37
				$apiResult = Json::phpJsonDecode($raw1);
			} catch (\Throwable $__hx__caught_e) {
				CallStack::saveExceptionTrace($__hx__caught_e);
				$__hx__real_e = ($__hx__caught_e instanceof HxException ? $__hx__caught_e->e : $__hx__caught_e);
				$e = $__hx__real_e;
				#/home/bubar/projects/sugoi/src/sugoi/mail/MandrillMailer.hx:60: characters 5-10
				throw new HxException("unable to decode : " . ($raw1??'null') . ", error is " . (\Std::string($e)??'null'));
			}
			#/home/bubar/projects/sugoi/src/sugoi/mail/MandrillMailer.hx:63: characters 4-33
			$map = new StringMap();
			#/home/bubar/projects/sugoi/src/sugoi/mail/MandrillMailer.hx:64: lines 64-89
			$_g2 = 0;
			while ($_g2 < $apiResult->length) {
				#/home/bubar/projects/sugoi/src/sugoi/mail/MandrillMailer.hx:64: characters 10-11
				$r1 = ($apiResult->arr[$_g2] ?? null);
				#/home/bubar/projects/sugoi/src/sugoi/mail/MandrillMailer.hx:64: lines 64-89
				++$_g2;
				#/home/bubar/projects/sugoi/src/sugoi/mail/MandrillMailer.hx:65: characters 5-103
				$v = null;
				#/home/bubar/projects/sugoi/src/sugoi/mail/MandrillMailer.hx:67: characters 12-20
				$__hx__switch = ($r1->status);
				if ($__hx__switch === "queued") {
					#/home/bubar/projects/sugoi/src/sugoi/mail/MandrillMailer.hx:71: characters 7-26
					$v = Outcome::Success(MailerSuccess::Queued());
				} else if ($__hx__switch === "sent") {
					#/home/bubar/projects/sugoi/src/sugoi/mail/MandrillMailer.hx:69: characters 7-24
					$v = Outcome::Success(MailerSuccess::Sent());
				} else {
					#/home/bubar/projects/sugoi/src/sugoi/mail/MandrillMailer.hx:74: characters 14-29
					$__hx__switch = ($r1->reject_reason);
					if ($__hx__switch === "hard-bounce") {
						#/home/bubar/projects/sugoi/src/sugoi/mail/MandrillMailer.hx:76: characters 9-32
						$v = Outcome::Failure(MailerError::HardBounce());
					} else if ($__hx__switch === "soft-bounce") {
						#/home/bubar/projects/sugoi/src/sugoi/mail/MandrillMailer.hx:78: characters 9-32
						$v = Outcome::Failure(MailerError::SoftBounce());
					} else if ($__hx__switch === "spam") {
						#/home/bubar/projects/sugoi/src/sugoi/mail/MandrillMailer.hx:80: characters 9-26
						$v = Outcome::Failure(MailerError::Spam());
					} else if ($__hx__switch === "unsub") {
						#/home/bubar/projects/sugoi/src/sugoi/mail/MandrillMailer.hx:82: characters 9-27
						$v = Outcome::Failure(MailerError::Unsub());
					} else {
						#/home/bubar/projects/sugoi/src/sugoi/mail/MandrillMailer.hx:84: characters 9-60
						$v = Outcome::Failure(MailerError::GenericError(new TypedError(null, $raw1, new HxAnon([
							"fileName" => "sugoi/mail/MandrillMailer.hx",
							"lineNumber" => 84,
							"className" => "sugoi.mail.MandrillMailer",
							"methodName" => "send",
						]))));
					}
				}
				#/home/bubar/projects/sugoi/src/sugoi/mail/MandrillMailer.hx:88: characters 5-27
				$map->data[$r1->email] = $v;
			}

			#/home/bubar/projects/sugoi/src/sugoi/mail/MandrillMailer.hx:90: characters 4-17
			$callback($map);
		}
	}
}

Boot::registerClass(MandrillMailer::class, 'sugoi.mail.MandrillMailer');
