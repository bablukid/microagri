<?php
/**
 * Generated by Haxe 4.0.0-rc.1+1fdd3d5
 */

namespace sugoi\mail;

use \php\_Boot\HxAnon;
use \php\Boot;
use \php\_Boot\HxString;
use \haxe\ds\StringMap;
use \php\_Boot\HxException;
use \haxe\xml\Printer;

class Mail implements IMail {
	/**
	 * @var StringMap
	 */
	public $headers;
	/**
	 * @var string
	 */
	public $htmlBody;
	/**
	 * @var \Array_hx
	 */
	public $recipients;
	/**
	 * @var object
	 */
	public $sender;
	/**
	 * @var string
	 */
	public $textBody;
	/**
	 * @var string
	 */
	public $title;

	/**
	 * @param string $addr
	 * 
	 * @return bool
	 */
	static public function isValid ($addr) {
		#/home/bubar/projects/sugoi/src/sugoi/mail/Mail.hx:67: characters 3-120
		$reg = new \EReg("^[^()<>@,;:\\\\\"\\[\\]\\s[:cntrl:]]+@[A-Z0-9][A-Z0-9-]*(\\.[A-Z0-9][A-Z0-9-]*)*\\.(xn--[A-Z0-9]+|[A-Z]{2,8})\$", "i");
		#/home/bubar/projects/sugoi/src/sugoi/mail/Mail.hx:68: characters 10-41
		if ($addr !== null) {
			#/home/bubar/projects/sugoi/src/sugoi/mail/Mail.hx:68: characters 26-41
			return $reg->match($addr);
		} else {
			#/home/bubar/projects/sugoi/src/sugoi/mail/Mail.hx:68: characters 10-41
			return false;
		}
	}

	/**
	 * @return void
	 */
	public function __construct () {
		#/home/bubar/projects/sugoi/src/sugoi/mail/Mail.hx:17: characters 3-18
		$this->recipients = new \Array_hx();
		#/home/bubar/projects/sugoi/src/sugoi/mail/Mail.hx:18: characters 3-22
		$this->headers = new StringMap();
	}

	/**
	 * @param object $ctx
	 * 
	 * @return void
	 */
	public function CSSInlining ($ctx) {
		#/home/bubar/projects/sugoi/src/sugoi/mail/Mail.hx:122: characters 41-50
		$css_data = null;
		$this1 = [];
		$css_data = $this1;
		#/home/bubar/projects/sugoi/src/sugoi/mail/Mail.hx:123: characters 3-15
		$ctx->addStyle = function ($sel, $style)  use (&$css_data) {
			#/home/bubar/projects/sugoi/src/sugoi/mail/Mail.hx:124: characters 4-7
			$sel = mb_strtolower($sel);
			#/home/bubar/projects/sugoi/src/sugoi/mail/Mail.hx:125: lines 125-128
			if (array_key_exists($sel, $css_data)) {
				#/home/bubar/projects/sugoi/src/sugoi/mail/Mail.hx:126: characters 5-56
				$value = ($css_data[$sel] ?? null)->concat(HxString::split($style, ";"));
				$css_data[$sel] = $value;
			} else {
				#/home/bubar/projects/sugoi/src/sugoi/mail/Mail.hx:128: characters 5-35
				$css_data[$sel] = HxString::split($style, ";");
			}
			#/home/bubar/projects/sugoi/src/sugoi/mail/Mail.hx:129: characters 4-13
			return "";
		};
		#/home/bubar/projects/sugoi/src/sugoi/mail/Mail.hx:131: characters 3-28
		$applyStyleRec = null;
		#/home/bubar/projects/sugoi/src/sugoi/mail/Mail.hx:132: characters 3-16
		$applyStyleRec = function ($x)  use (&$css_data, &$applyStyleRec) {
			#/home/bubar/projects/sugoi/src/sugoi/mail/Mail.hx:133: lines 133-142
			if ($x->nodeType === \Xml::$Element) {
				#/home/bubar/projects/sugoi/src/sugoi/mail/Mail.hx:134: characters 16-26
				if ($x->nodeType !== \Xml::$Element) {
					throw new HxException("Bad node type, expected Element but found " . ($x->nodeType??'null'));
				}
				#/home/bubar/projects/sugoi/src/sugoi/mail/Mail.hx:134: characters 5-41
				$name = mb_strtolower($x->nodeName);
				#/home/bubar/projects/sugoi/src/sugoi/mail/Mail.hx:135: lines 135-139
				if (array_key_exists($name, $css_data)) {
					#/home/bubar/projects/sugoi/src/sugoi/mail/Mail.hx:136: lines 136-139
					if ($x->get("style") !== null) {
						#/home/bubar/projects/sugoi/src/sugoi/mail/Mail.hx:137: characters 7-65
						$x->set("style", ($x->get("style")??'null') . ";" . (($css_data[$name] ?? null)->join(";")??'null'));
					} else {
						#/home/bubar/projects/sugoi/src/sugoi/mail/Mail.hx:139: characters 7-46
						$x->set("style", ($css_data[$name] ?? null)->join(";"));
					}
				}
				#/home/bubar/projects/sugoi/src/sugoi/mail/Mail.hx:140: characters 15-16
				if (($x->nodeType !== \Xml::$Document) && ($x->nodeType !== \Xml::$Element)) {
					throw new HxException("Bad node type, expected Element or Document but found " . ($x->nodeType??'null'));
				}
				$n = $x->children->iterator();
				while ($n->hasNext()) {
					#/home/bubar/projects/sugoi/src/sugoi/mail/Mail.hx:140: lines 140-141
					$n1 = $n->next();
					#/home/bubar/projects/sugoi/src/sugoi/mail/Mail.hx:141: characters 6-22
					$applyStyleRec($n1);
				}

			}
		};
		#/home/bubar/projects/sugoi/src/sugoi/mail/Mail.hx:144: characters 3-17
		$ctx->applyStyle = function ($raw)  use (&$applyStyleRec) {
			#/home/bubar/projects/sugoi/src/sugoi/mail/Mail.hx:145: characters 4-27
			$x1 = \Xml::parse($raw);
			#/home/bubar/projects/sugoi/src/sugoi/mail/Mail.hx:146: characters 13-14
			if (($x1->nodeType !== \Xml::$Document) && ($x1->nodeType !== \Xml::$Element)) {
				throw new HxException("Bad node type, expected Element or Document but found " . ($x1->nodeType??'null'));
			}
			$n2 = $x1->children->iterator();
			while ($n2->hasNext()) {
				#/home/bubar/projects/sugoi/src/sugoi/mail/Mail.hx:146: lines 146-147
				$n3 = $n2->next();
				#/home/bubar/projects/sugoi/src/sugoi/mail/Mail.hx:147: characters 5-21
				$applyStyleRec($n3);
			}

			#/home/bubar/projects/sugoi/src/sugoi/mail/Mail.hx:148: characters 4-23
			return Printer::print($x1);
		};
	}

	/**
	 * can add one or more recipient
	 * @param	email
	 * @param	?name
	 * @param	?userId
	 * 
	 * @param string $email
	 * @param string $name
	 * @param int $userId
	 * 
	 * @return Mail
	 */
	public function addRecipient ($email, $name = null, $userId = null) {
		#/home/bubar/projects/sugoi/src/sugoi/mail/Mail.hx:50: characters 3-28
		if (!Mail::isValid($email)) {
			#/home/bubar/projects/sugoi/src/sugoi/mail/Mail.hx:50: characters 23-28
			throw new HxException("invalid recipient \"" . ($email??'null') . "\"");
		}
		#/home/bubar/projects/sugoi/src/sugoi/mail/Mail.hx:51: characters 3-62
		$_this = $this->recipients;
		$_this->arr[$_this->length] = new HxAnon([
			"email" => $email,
			"name" => $name,
			"userId" => $userId,
		]);
		++$_this->length;

		#/home/bubar/projects/sugoi/src/sugoi/mail/Mail.hx:52: characters 3-14
		return $this;
	}

	/**
	 * @return StringMap
	 */
	public function getHeaders () {
		#/home/bubar/projects/sugoi/src/sugoi/mail/Mail.hx:175: characters 3-17
		return $this->headers;
	}

	/**
	 * @return string
	 */
	public function getHtmlBody () {
		#/home/bubar/projects/sugoi/src/sugoi/mail/Mail.hx:162: characters 3-18
		return $this->htmlBody;
	}

	/**
	 * generate a custom key for transactionnal emails, valid during the current day
	 * 
	 * @return string
	 */
	public function getKey () {
		#/home/bubar/projects/sugoi/src/sugoi/mail/Mail.hx:80: characters 10-111
		return mb_substr(md5((\App::$config->get("key")??'null') . (($this->recipients->arr[0] ?? null)->email??'null') . (\Date::now()->getDate()??'null')), 0, 12);
	}

	/**
	 * @return \Array_hx
	 */
	public function getRecipients () {
		#/home/bubar/projects/sugoi/src/sugoi/mail/Mail.hx:22: characters 3-20
		return $this->recipients;
	}

	/**
	 * @return object
	 */
	public function getSender () {
		#/home/bubar/projects/sugoi/src/sugoi/mail/Mail.hx:179: characters 3-16
		return $this->sender;
	}

	/**
	 * @return string
	 */
	public function getSubject () {
		#/home/bubar/projects/sugoi/src/sugoi/mail/Mail.hx:154: characters 3-15
		return $this->title;
	}

	/**
	 * @return string
	 */
	public function getTextBody () {
		#/home/bubar/projects/sugoi/src/sugoi/mail/Mail.hx:166: characters 3-18
		return $this->textBody;
	}

	/**
	 * @return string
	 */
	public function getTitle () {
		#/home/bubar/projects/sugoi/src/sugoi/mail/Mail.hx:158: characters 3-22
		return $this->getSubject();
	}

	/**
	 * @param string $k
	 * @param string $v
	 * 
	 * @return Mail
	 */
	public function setHeader ($k, $v) {
		#/home/bubar/projects/sugoi/src/sugoi/mail/Mail.hx:72: characters 3-20
		$this->headers->data[$k] = $v;
		#/home/bubar/projects/sugoi/src/sugoi/mail/Mail.hx:73: characters 3-14
		return $this;
	}

	/**
	 * @param string $s
	 * 
	 * @return Mail
	 */
	public function setHtmlBody ($s) {
		#/home/bubar/projects/sugoi/src/sugoi/mail/Mail.hx:105: characters 3-15
		$this->htmlBody = $s;
		#/home/bubar/projects/sugoi/src/sugoi/mail/Mail.hx:106: characters 3-14
		return $this;
	}

	/**
	 * render html from a template + vars
	 * @param	tpl		A Template path
	 * @param	ctx 	Vars to send to template
	 * 
	 * @param string $tpl
	 * @param mixed $ctx
	 * 
	 * @return void
	 */
	public function setHtmlBodyWithTemplate ($tpl, $ctx) {
		#/home/bubar/projects/sugoi/src/sugoi/mail/Mail.hx:89: characters 3-25
		$app = \App::$current;
	}

	/**
	 * alias to addRecipient()
	 * @param	email
	 * @param	?name
	 * @param	?userId
	 * 
	 * @param string $email
	 * @param string $name
	 * @param int $userId
	 * 
	 * @return Mail
	 */
	public function setRecipient ($email, $name = null, $userId = null) {
		#/home/bubar/projects/sugoi/src/sugoi/mail/Mail.hx:62: characters 3-36
		$this->addRecipient($email, $name, $userId);
		#/home/bubar/projects/sugoi/src/sugoi/mail/Mail.hx:63: characters 3-14
		return $this;
	}

	/**
	 * @param string $email
	 * @param string $name
	 * 
	 * @return void
	 */
	public function setReplyTo ($email, $name = null) {
		#/home/bubar/projects/sugoi/src/sugoi/mail/Mail.hx:33: characters 3-28
		if (!Mail::isValid($email)) {
			#/home/bubar/projects/sugoi/src/sugoi/mail/Mail.hx:33: characters 23-28
			throw new HxException("invalid reply-to email : \"" . ($email??'null') . "\"");
		}
		#/home/bubar/projects/sugoi/src/sugoi/mail/Mail.hx:35: characters 3-59
		$this->setHeader("Reply-To", "<" . ($email??'null') . ">" . ((($name === null ? "" : $name))??'null'));
	}

	/**
	 * @param string $email
	 * @param string $name
	 * @param int $userId
	 * 
	 * @return Mail
	 */
	public function setSender ($email, $name = null, $userId = null) {
		#/home/bubar/projects/sugoi/src/sugoi/mail/Mail.hx:26: characters 3-28
		if (!Mail::isValid($email)) {
			#/home/bubar/projects/sugoi/src/sugoi/mail/Mail.hx:26: characters 23-28
			throw new HxException("invalid sender email : \"" . ($email??'null') . "\"");
		}
		#/home/bubar/projects/sugoi/src/sugoi/mail/Mail.hx:28: characters 3-49
		$this->sender = new HxAnon([
			"name" => $name,
			"email" => $email,
			"userId" => $userId,
		]);
		#/home/bubar/projects/sugoi/src/sugoi/mail/Mail.hx:29: characters 3-14
		return $this;
	}

	/**
	 * @param string $s
	 * 
	 * @return Mail
	 */
	public function setSubject ($s) {
		#/home/bubar/projects/sugoi/src/sugoi/mail/Mail.hx:39: characters 3-12
		$this->title = $s;
		#/home/bubar/projects/sugoi/src/sugoi/mail/Mail.hx:40: characters 3-14
		return $this;
	}

	/**
	 * @param string $t
	 * 
	 * @return Mail
	 */
	public function setTextBody ($t) {
		#/home/bubar/projects/sugoi/src/sugoi/mail/Mail.hx:170: characters 3-15
		$this->textBody = $t;
		#/home/bubar/projects/sugoi/src/sugoi/mail/Mail.hx:171: characters 3-14
		return $this;
	}

	/**
	 * @param mixed $tpl
	 * @param mixed $ctx
	 * 
	 * @return void
	 */
	public function setTextBodyWithTemplate ($tpl, $ctx) {
		#/home/bubar/projects/sugoi/src/sugoi/mail/Mail.hx:110: characters 3-25
		$app = \App::$current;
	}
}

Boot::registerClass(Mail::class, 'sugoi.mail.Mail');
