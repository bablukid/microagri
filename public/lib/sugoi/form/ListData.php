<?php
/**
 * Generated by Haxe 4.0.0-rc.1+1fdd3d5
 */

namespace sugoi\form;

use \php\_Boot\HxAnon;
use \php\Boot;
use \haxe\ds\StringMap;
use \haxe\ds\List_hx;
use \php\_NativeIndexedArray\NativeIndexedArrayIterator;

class ListData {
	/**
	 * @var \Array_hx
	 */
	static public $months;
	/**
	 * @var \Array_hx
	 */
	static public $months_short;

	/**
	 * @param \Array_hx $array
	 * @param int $startCounter
	 * 
	 * @return List_hx
	 */
	static public function arrayToList ($array, $startCounter = 0) {
		#/home/bubar/projects/sugoi/src/sugoi/form/ListData.hx:106: lines 106-116
		if ($startCounter === null) {
			$startCounter = 0;
		}
		#/home/bubar/projects/sugoi/src/sugoi/form/ListData.hx:107: characters 3-39
		$data = new List_hx();
		#/home/bubar/projects/sugoi/src/sugoi/form/ListData.hx:109: characters 3-24
		$c = $startCounter;
		#/home/bubar/projects/sugoi/src/sugoi/form/ListData.hx:110: lines 110-114
		$_g = 0;
		while ($_g < $array->length) {
			#/home/bubar/projects/sugoi/src/sugoi/form/ListData.hx:110: characters 8-9
			$v = ($array->arr[$_g] ?? null);
			#/home/bubar/projects/sugoi/src/sugoi/form/ListData.hx:110: lines 110-114
			++$_g;
			#/home/bubar/projects/sugoi/src/sugoi/form/ListData.hx:112: characters 4-34
			$data->add(new HxAnon([
				"key" => $c,
				"value" => $v,
			]));
			#/home/bubar/projects/sugoi/src/sugoi/form/ListData.hx:113: characters 4-7
			++$c;
		}

		#/home/bubar/projects/sugoi/src/sugoi/form/ListData.hx:115: characters 3-14
		return $data;
	}

	/**
	 * @param \Array_hx $array
	 * 
	 * @return List_hx
	 */
	static public function flatArraytoList ($array) {
		#/home/bubar/projects/sugoi/src/sugoi/form/ListData.hx:120: characters 3-39
		$data = new List_hx();
		#/home/bubar/projects/sugoi/src/sugoi/form/ListData.hx:122: characters 3-50
		$_g = 0;
		while ($_g < $array->length) {
			#/home/bubar/projects/sugoi/src/sugoi/form/ListData.hx:122: characters 8-9
			$i = ($array->arr[$_g] ?? null);
			#/home/bubar/projects/sugoi/src/sugoi/form/ListData.hx:122: characters 3-50
			++$_g;
			#/home/bubar/projects/sugoi/src/sugoi/form/ListData.hx:122: characters 20-50
			$data->add(new HxAnon([
				"key" => $i,
				"value" => $i,
			]));
		}

		#/home/bubar/projects/sugoi/src/sugoi/form/ListData.hx:124: characters 3-14
		return $data;
	}

	/**
	 * @param \Array_hx $arr
	 * 
	 * @return \Array_hx
	 */
	static public function fromArray ($arr) {
		#/home/bubar/projects/sugoi/src/sugoi/form/ListData.hx:32: characters 3-17
		$data = new \Array_hx();
		#/home/bubar/projects/sugoi/src/sugoi/form/ListData.hx:33: lines 33-35
		$_g = 0;
		while ($_g < $arr->length) {
			#/home/bubar/projects/sugoi/src/sugoi/form/ListData.hx:33: characters 8-9
			$a = ($arr->arr[$_g] ?? null);
			#/home/bubar/projects/sugoi/src/sugoi/form/ListData.hx:33: lines 33-35
			++$_g;
			#/home/bubar/projects/sugoi/src/sugoi/form/ListData.hx:34: characters 20-33
			$x = \Std::string($a);
			#/home/bubar/projects/sugoi/src/sugoi/form/ListData.hx:34: characters 4-57
			$x1 = new HxAnon([
				"key" => $x,
				"value" => \Std::string($a),
			]);
			$data->arr[$data->length] = $x1;
			++$data->length;

		}

		#/home/bubar/projects/sugoi/src/sugoi/form/ListData.hx:36: characters 3-14
		return $data;
	}

	/**
	 * @param int $low
	 * @param int $high
	 * @param \Array_hx $labels
	 * 
	 * @return \Array_hx
	 */
	static public function getDateElement ($low, $high, $labels = null) {
		#/home/bubar/projects/sugoi/src/sugoi/form/ListData.hx:9: characters 3-17
		$data = new \Array_hx();
		#/home/bubar/projects/sugoi/src/sugoi/form/ListData.hx:10: lines 10-18
		if ($labels !== null) {
			#/home/bubar/projects/sugoi/src/sugoi/form/ListData.hx:11: lines 11-12
			$_g = $low;
			$_g1 = $high + 1;
			while ($_g < $_g1) {
				$i = $_g++;
				#/home/bubar/projects/sugoi/src/sugoi/form/ListData.hx:12: characters 5-48
				$data->arr[$data->length] = new HxAnon([
					"label" => ($labels->arr[$i - 1] ?? null),
					"value" => $i,
				]);
				++$data->length;

			}
		} else {
			#/home/bubar/projects/sugoi/src/sugoi/form/ListData.hx:14: lines 14-17
			$_g2 = $low;
			$_g11 = $high + 1;
			while ($_g2 < $_g11) {
				$i1 = $_g2++;
				#/home/bubar/projects/sugoi/src/sugoi/form/ListData.hx:15: characters 5-27
				$n = \Std::string($i1);
				#/home/bubar/projects/sugoi/src/sugoi/form/ListData.hx:16: characters 5-62
				$data->arr[$data->length] = new HxAnon([
					"label" => ($i1 < 10 ? "0" . ($n??'null') : $n),
					"value" => $i1,
				]);
				++$data->length;

			}
		}
		#/home/bubar/projects/sugoi/src/sugoi/form/ListData.hx:19: characters 3-14
		return $data;
	}

	/**
	 * @param bool $reverse
	 * 
	 * @return \Array_hx
	 */
	static public function getDays ($reverse = true) {
		#/home/bubar/projects/sugoi/src/sugoi/form/ListData.hx:40: lines 40-46
		if ($reverse === null) {
			$reverse = true;
		}
		#/home/bubar/projects/sugoi/src/sugoi/form/ListData.hx:41: characters 3-16
		$data = new \Array_hx();
		#/home/bubar/projects/sugoi/src/sugoi/form/ListData.hx:42: lines 42-44
		$_g = 1;
		$_g1 = 32;
		while ($_g < $_g1) {
			$i = $_g++;
			#/home/bubar/projects/sugoi/src/sugoi/form/ListData.hx:43: characters 4-49
			$x = new HxAnon([
				"label" => \Std::string($i),
				"value" => $i,
			]);
			$data->arr[$data->length] = $x;
			++$data->length;

		}

		#/home/bubar/projects/sugoi/src/sugoi/form/ListData.hx:45: characters 3-15
		return $data;
	}

	/**
	 * @return \Array_hx
	 */
	static public function getMinutes () {
		#/home/bubar/projects/sugoi/src/sugoi/form/ListData.hx:23: characters 3-17
		$data = new \Array_hx();
		#/home/bubar/projects/sugoi/src/sugoi/form/ListData.hx:24: lines 24-27
		$_g = 0;
		while ($_g < 12) {
			$i = $_g++;
			#/home/bubar/projects/sugoi/src/sugoi/form/ListData.hx:25: characters 4-18
			$x = $i * 5;
			#/home/bubar/projects/sugoi/src/sugoi/form/ListData.hx:26: characters 23-65
			$x1 = ($x < 10 ? "0" . (\Std::string($x)??'null') : \Std::string($x));
			#/home/bubar/projects/sugoi/src/sugoi/form/ListData.hx:26: characters 4-79
			$data->arr[$data->length] = new HxAnon([
				"label" => $x1,
				"value" => $x,
			]);
			++$data->length;

		}

		#/home/bubar/projects/sugoi/src/sugoi/form/ListData.hx:28: characters 3-14
		return $data;
	}

	/**
	 * Get months list
	 * 
	 * @param bool $short
	 * 
	 * @return \Array_hx
	 */
	static public function getMonths ($short = false) {
		#/home/bubar/projects/sugoi/src/sugoi/form/ListData.hx:57: lines 57-66
		if ($short === null) {
			$short = false;
		}
		#/home/bubar/projects/sugoi/src/sugoi/form/ListData.hx:58: characters 3-45
		$input = ($short ? ListData::$months_short : ListData::$months);
		#/home/bubar/projects/sugoi/src/sugoi/form/ListData.hx:59: characters 3-16
		$out = new \Array_hx();
		#/home/bubar/projects/sugoi/src/sugoi/form/ListData.hx:60: characters 3-13
		$c = 1;
		#/home/bubar/projects/sugoi/src/sugoi/form/ListData.hx:61: lines 61-64
		$_g = 0;
		while ($_g < $input->length) {
			#/home/bubar/projects/sugoi/src/sugoi/form/ListData.hx:61: characters 9-10
			$i = ($input->arr[$_g] ?? null);
			#/home/bubar/projects/sugoi/src/sugoi/form/ListData.hx:61: lines 61-64
			++$_g;
			#/home/bubar/projects/sugoi/src/sugoi/form/ListData.hx:62: characters 4-36
			$out->arr[$out->length] = new HxAnon([
				"label" => $i,
				"value" => $c,
			]);
			++$out->length;

			#/home/bubar/projects/sugoi/src/sugoi/form/ListData.hx:63: characters 4-7
			++$c;
		}

		#/home/bubar/projects/sugoi/src/sugoi/form/ListData.hx:65: characters 3-13
		return $out;
	}

	/**
	 * get years list
	 * 
	 * @param int $from
	 * @param int $to
	 * @param bool $reverse
	 * 
	 * @return \Array_hx
	 */
	static public function getYears ($from, $to, $reverse = true) {
		#/home/bubar/projects/sugoi/src/sugoi/form/ListData.hx:72: lines 72-87
		if ($reverse === null) {
			$reverse = true;
		}
		#/home/bubar/projects/sugoi/src/sugoi/form/ListData.hx:73: characters 3-17
		$data = new \Array_hx();
		#/home/bubar/projects/sugoi/src/sugoi/form/ListData.hx:75: lines 75-85
		if ($reverse) {
			#/home/bubar/projects/sugoi/src/sugoi/form/ListData.hx:76: lines 76-79
			$_g = 0;
			$_g1 = $to - $from + 1;
			while ($_g < $_g1) {
				$i = $_g++;
				#/home/bubar/projects/sugoi/src/sugoi/form/ListData.hx:77: characters 5-20
				$n = $to - $i;
				#/home/bubar/projects/sugoi/src/sugoi/form/ListData.hx:78: characters 5-50
				$x = new HxAnon([
					"label" => \Std::string($n),
					"value" => $n,
				]);
				$data->arr[$data->length] = $x;
				++$data->length;

			}
		} else {
			#/home/bubar/projects/sugoi/src/sugoi/form/ListData.hx:81: lines 81-84
			$_g2 = 0;
			$_g11 = $to - $from + 1;
			while ($_g2 < $_g11) {
				$i1 = $_g2++;
				#/home/bubar/projects/sugoi/src/sugoi/form/ListData.hx:82: characters 5-22
				$n1 = $from + $i1;
				#/home/bubar/projects/sugoi/src/sugoi/form/ListData.hx:83: characters 5-50
				$x1 = new HxAnon([
					"label" => \Std::string($n1),
					"value" => $n1,
				]);
				$data->arr[$data->length] = $x1;
				++$data->length;

			}
		}
		#/home/bubar/projects/sugoi/src/sugoi/form/ListData.hx:86: characters 3-15
		return $data;
	}

	/**
	 * @param StringMap $hash
	 * @param int $startCounter
	 * 
	 * @return List_hx
	 */
	static public function hashToList ($hash, $startCounter = 0) {
		#/home/bubar/projects/sugoi/src/sugoi/form/ListData.hx:95: lines 95-103
		if ($startCounter === null) {
			$startCounter = 0;
		}
		#/home/bubar/projects/sugoi/src/sugoi/form/ListData.hx:96: characters 3-39
		$data = new List_hx();
		#/home/bubar/projects/sugoi/src/sugoi/form/ListData.hx:98: characters 15-26
		$key = new NativeIndexedArrayIterator(array_map("strval", array_keys($hash->data)));
		while ($key->hasNext()) {
			#/home/bubar/projects/sugoi/src/sugoi/form/ListData.hx:98: lines 98-101
			$key1 = $key->next();
			#/home/bubar/projects/sugoi/src/sugoi/form/ListData.hx:100: characters 4-48
			$data->add(new HxAnon([
				"key" => $key1,
				"value" => ($hash->data[$key1] ?? null),
			]));
		}

		#/home/bubar/projects/sugoi/src/sugoi/form/ListData.hx:102: characters 3-14
		return $data;
	}

	/**
	 * @internal
	 * @access private
	 */
	static public function __hx__init ()
	{
		static $called = false;
		if ($called) return;
		$called = true;


		self::$months_short = \Array_hx::wrap([
			"Jan",
			"Feb",
			"Mar",
			"Apr",
			"May",
			"Jun",
			"Jul",
			"Aug",
			"Sep",
			"Oct",
			"Nov",
			"Dec",
		]);
		self::$months = \Array_hx::wrap([
			"Janvier",
			"Février",
			"Mars",
			"Avril",
			"Mai",
			"Juin",
			"Juillet",
			"Aout",
			"Septembre",
			"Octobre",
			"Novembre",
			"Décembre",
		]);
	}
}

Boot::registerClass(ListData::class, 'sugoi.form.ListData');
ListData::__hx__init();
