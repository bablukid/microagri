<?php
/**
 * Generated by Haxe 4.0.0-rc.1+1fdd3d5
 */

namespace sugoi\form\elements;

use \php\Boot;
use \sugoi\form\FormElement;
use \php\_Boot\HxString;
use \sugoi\form\Formatter;
use \sugoi\form\Form;

class Input extends FormElement {
	/**
	 * @var bool
	 */
	public $disabled;
	/**
	 * @var Formatter
	 */
	public $formatter;
	/**
	 * @var InputType
	 */
	public $inputType;
	/**
	 * @var bool
	 */
	public $printRequired;
	/**
	 * @var bool
	 */
	public $showLabelAsDefaultValue;

	/**
	 * @param string $name
	 * @param string $label
	 * @param mixed $value
	 * @param bool $required
	 * @param \Array_hx $validators
	 * @param string $attributes
	 * 
	 * @return void
	 */
	public function __construct ($name, $label, $value = null, $required = false, $validators = null, $attributes = "") {
		#/home/bubar/projects/sugoi/src/sugoi/form/elements/Input.hx:28: lines 28-50
		if ($required === null) {
			$required = false;
		}
		if ($attributes === null) {
			$attributes = "";
		}
		#/home/bubar/projects/sugoi/src/sugoi/form/elements/Input.hx:29: characters 3-10
		parent::__construct();
		#/home/bubar/projects/sugoi/src/sugoi/form/elements/Input.hx:30: characters 3-19
		$this->name = $name;
		#/home/bubar/projects/sugoi/src/sugoi/form/elements/Input.hx:31: characters 3-21
		$this->label = $label;
		#/home/bubar/projects/sugoi/src/sugoi/form/elements/Input.hx:32: characters 3-21
		$this->value = $value;
		#/home/bubar/projects/sugoi/src/sugoi/form/elements/Input.hx:33: characters 3-27
		$this->required = $required;
		#/home/bubar/projects/sugoi/src/sugoi/form/elements/Input.hx:34: characters 3-31
		$this->attributes = $attributes;
		#/home/bubar/projects/sugoi/src/sugoi/form/elements/Input.hx:36: lines 36-42
		if ($validators !== null) {
			#/home/bubar/projects/sugoi/src/sugoi/form/elements/Input.hx:38: lines 38-41
			$_g = 0;
			while ($_g < $validators->length) {
				#/home/bubar/projects/sugoi/src/sugoi/form/elements/Input.hx:38: characters 9-10
				$i = ($validators->arr[$_g] ?? null);
				#/home/bubar/projects/sugoi/src/sugoi/form/elements/Input.hx:38: lines 38-41
				++$_g;
				#/home/bubar/projects/sugoi/src/sugoi/form/elements/Input.hx:40: characters 5-27
				$this->validators->add($i);
			}
		}
		#/home/bubar/projects/sugoi/src/sugoi/form/elements/Input.hx:44: characters 3-24
		$this->set_password(false);
		#/home/bubar/projects/sugoi/src/sugoi/form/elements/Input.hx:45: characters 3-24
		$this->disabled = false;
		#/home/bubar/projects/sugoi/src/sugoi/form/elements/Input.hx:46: characters 3-21
		$this->inputType = InputType::ITText();
		#/home/bubar/projects/sugoi/src/sugoi/form/elements/Input.hx:48: characters 3-24
		$this->printRequired = false;
		#/home/bubar/projects/sugoi/src/sugoi/form/elements/Input.hx:49: characters 3-59
		if (Form::$USE_TWITTER_BOOTSTRAP) {
			#/home/bubar/projects/sugoi/src/sugoi/form/elements/Input.hx:49: characters 34-59
			$this->cssClass = "form-control";
		}
	}

	/**
	 * render label + field
	 * 
	 * @return string
	 */
	public function getFullRow () {
		#/home/bubar/projects/sugoi/src/sugoi/form/elements/Input.hx:91: lines 91-95
		if ($this->inputType === InputType::ITHidden()) {
			#/home/bubar/projects/sugoi/src/sugoi/form/elements/Input.hx:92: characters 4-24
			return $this->render();
		} else {
			#/home/bubar/projects/sugoi/src/sugoi/form/elements/Input.hx:94: characters 4-29
			return parent::getFullRow();
		}
	}

	/**
	 * @param string $str
	 * 
	 * @return mixed
	 */
	public function getTypedValue ($str) {
		#/home/bubar/projects/sugoi/src/sugoi/form/elements/Input.hx:80: lines 80-82
		if (($str === "") || ($str === null)) {
			#/home/bubar/projects/sugoi/src/sugoi/form/elements/Input.hx:81: characters 4-15
			return null;
		}
		#/home/bubar/projects/sugoi/src/sugoi/form/elements/Input.hx:83: characters 3-36
		return trim($str);
	}

	/**
	 * @return bool
	 */
	public function get_password () {
		#/home/bubar/projects/sugoi/src/sugoi/form/elements/Input.hx:53: characters 3-33
		return $this->inputType === InputType::ITPassword();
	}

	/**
	 * @return string
	 */
	public function render () {
		#/home/bubar/projects/sugoi/src/sugoi/form/elements/Input.hx:67: characters 3-39
		$n = ($this->parentForm->name??'null') . "_" . ($this->name??'null');
		#/home/bubar/projects/sugoi/src/sugoi/form/elements/Input.hx:68: lines 68-73
		$tType = null;
		#/home/bubar/projects/sugoi/src/sugoi/form/elements/Input.hx:68: characters 22-31
		$__hx__switch = ($this->inputType->index);
		if ($__hx__switch === 0) {
			#/home/bubar/projects/sugoi/src/sugoi/form/elements/Input.hx:68: lines 68-73
			$tType = "text";
		} else if ($__hx__switch === 1) {
			$tType = "password";
		} else if ($__hx__switch === 2) {
			$tType = "hidden";
		} else if ($__hx__switch === 3) {
			$tType = "color";
		}
		#/home/bubar/projects/sugoi/src/sugoi/form/elements/Input.hx:75: characters 10-103
		$tmp = "<input class=\"" . ($this->getClasses()??'null') . "\" type=\"" . ($tType??'null') . "\" name=\"" . ($n??'null') . "\" id=\"" . ($n??'null') . "\" value=\"";
		#/home/bubar/projects/sugoi/src/sugoi/form/elements/Input.hx:75: characters 105-122
		$s = $this->value;
		#/home/bubar/projects/sugoi/src/sugoi/form/elements/Input.hx:75: characters 3-251
		return ($tmp??'null') . ((($s === null ? "" : HxString::split(htmlspecialchars(\Std::string($s), (null ? ENT_QUOTES | ENT_HTML401 : ENT_NOQUOTES)), "\"")->join("&quot;")))??'null') . "\"  " . ($this->attributes??'null') . " " . ((($this->disabled ? "disabled" : ""))??'null') . "/>" . ((($this->required && $this->parentForm->isSubmitted() && $this->printRequired ? " required" : ""))??'null');
	}

	/**
	 * @param bool $v
	 * 
	 * @return bool
	 */
	public function set_password ($v) {
		#/home/bubar/projects/sugoi/src/sugoi/form/elements/Input.hx:57: lines 57-61
		if ($v) {
			#/home/bubar/projects/sugoi/src/sugoi/form/elements/Input.hx:58: characters 4-26
			$this->inputType = InputType::ITPassword();
		} else {
			#/home/bubar/projects/sugoi/src/sugoi/form/elements/Input.hx:60: characters 4-22
			$this->inputType = InputType::ITText();
		}
		#/home/bubar/projects/sugoi/src/sugoi/form/elements/Input.hx:62: characters 3-11
		return $v;
	}
}

Boot::registerClass(Input::class, 'sugoi.form.elements.Input');
Boot::registerGetters('sugoi\\form\\elements\\Input', [
	'password' => true
]);
Boot::registerSetters('sugoi\\form\\elements\\Input', [
	'password' => true
]);
