<?php
/**
 * Generated by Haxe 4.0.0-rc.1+1fdd3d5
 */

namespace sys\db\_Mysql;

use \php\Boot;
use \sys\db\Connection;
use \sys\db\ResultSet;
use \php\_Boot\HxString;
use \php\_Boot\HxException;

class MysqlConnection implements Connection {
	/**
	 * @var \Mysqli
	 */
	public $db;

	/**
	 * @param object $params
	 * 
	 * @return void
	 */
	public function __construct ($params) {
		#/home/bubar/haxe/versions/4.0.0-rc.1/std/php/_std/sys/db/Mysql.hx:57: characters 3-93
		if ($params->port === null) {
			#/home/bubar/haxe/versions/4.0.0-rc.1/std/php/_std/sys/db/Mysql.hx:57: characters 28-93
			$params->port = \Std::parseInt(ini_get("mysqli.default_port"));
		}
		#/home/bubar/haxe/versions/4.0.0-rc.1/std/php/_std/sys/db/Mysql.hx:58: characters 3-85
		if ($params->socket === null) {
			#/home/bubar/haxe/versions/4.0.0-rc.1/std/php/_std/sys/db/Mysql.hx:58: characters 30-85
			$params->socket = ini_get("mysqli.default_socket");
		}
		#/home/bubar/haxe/versions/4.0.0-rc.1/std/php/_std/sys/db/Mysql.hx:59: characters 3-52
		if ($params->database === null) {
			#/home/bubar/haxe/versions/4.0.0-rc.1/std/php/_std/sys/db/Mysql.hx:59: characters 32-52
			$params->database = "";
		}
		#/home/bubar/haxe/versions/4.0.0-rc.1/std/php/_std/sys/db/Mysql.hx:61: characters 3-102
		$this->db = new \Mysqli($params->host, $params->user, $params->pass, $params->database, $params->port, $params->socket);
	}

	/**
	 * @param \StringBuf $s
	 * @param mixed $v
	 * 
	 * @return void
	 */
	public function addValue ($s, $v) {
		#/home/bubar/haxe/versions/4.0.0-rc.1/std/php/_std/sys/db/Mysql.hx:86: lines 86-93
		if (is_int($v) || is_null($v)) {
			#/home/bubar/haxe/versions/4.0.0-rc.1/std/php/_std/sys/db/Mysql.hx:88: characters 4-12
			$s->add($v);
		} else if (is_bool($v)) {
			#/home/bubar/haxe/versions/4.0.0-rc.1/std/php/_std/sys/db/Mysql.hx:90: characters 4-20
			$s->add(($v ? 1 : 0));
		} else {
			#/home/bubar/haxe/versions/4.0.0-rc.1/std/php/_std/sys/db/Mysql.hx:92: characters 4-31
			$s->add($this->quote(\Std::string($v)));
		}
	}

	/**
	 * @return void
	 */
	public function close () {
		#/home/bubar/haxe/versions/4.0.0-rc.1/std/php/_std/sys/db/Mysql.hx:73: characters 3-13
		$this->db->close();
	}

	/**
	 * @return void
	 */
	public function commit () {
		#/home/bubar/haxe/versions/4.0.0-rc.1/std/php/_std/sys/db/Mysql.hx:110: characters 3-29
		$success = $this->db->commit();
		#/home/bubar/haxe/versions/4.0.0-rc.1/std/php/_std/sys/db/Mysql.hx:111: characters 3-22
		if (!$success) {
			#/home/bubar/haxe/versions/4.0.0-rc.1/std/php/_std/sys/db/Mysql.hx:111: characters 17-22
			throw new HxException("Failed to commit transaction: " . ($this->db->error??'null'));
		}
	}

	/**
	 * @return string
	 */
	public function dbName () {
		#/home/bubar/haxe/versions/4.0.0-rc.1/std/php/_std/sys/db/Mysql.hx:101: characters 3-17
		return "MySQL";
	}

	/**
	 * @return int
	 */
	public function lastInsertId () {
		#/home/bubar/haxe/versions/4.0.0-rc.1/std/php/_std/sys/db/Mysql.hx:97: characters 3-22
		return $this->db->insert_id;
	}

	/**
	 * @param string $s
	 * 
	 * @return string
	 */
	public function quote ($s) {
		#/home/bubar/haxe/versions/4.0.0-rc.1/std/php/_std/sys/db/Mysql.hx:81: characters 3-68
		if (HxString::indexOf($s, "\x00") >= 0) {
			#/home/bubar/haxe/versions/4.0.0-rc.1/std/php/_std/sys/db/Mysql.hx:81: characters 31-68
			return "x'" . (bin2hex($s)??'null') . "'";
		}
		#/home/bubar/haxe/versions/4.0.0-rc.1/std/php/_std/sys/db/Mysql.hx:82: characters 3-41
		return "'" . ($this->db->escape_string($s)??'null') . "'";
	}

	/**
	 * @param string $s
	 * 
	 * @return ResultSet
	 */
	public function request ($s) {
		#/home/bubar/haxe/versions/4.0.0-rc.1/std/php/_std/sys/db/Mysql.hx:65: characters 3-28
		$result = $this->db->query($s);
		#/home/bubar/haxe/versions/4.0.0-rc.1/std/php/_std/sys/db/Mysql.hx:66: characters 3-29
		if ($result === false) {
			#/home/bubar/haxe/versions/4.0.0-rc.1/std/php/_std/sys/db/Mysql.hx:66: characters 24-29
			throw new HxException("Failed to perform db query: " . ($this->db->error??'null'));
		}
		#/home/bubar/haxe/versions/4.0.0-rc.1/std/php/_std/sys/db/Mysql.hx:67: characters 3-34
		if ($result === true) {
			#/home/bubar/haxe/versions/4.0.0-rc.1/std/php/_std/sys/db/Mysql.hx:67: characters 23-34
			return null;
		}
		#/home/bubar/haxe/versions/4.0.0-rc.1/std/php/_std/sys/db/Mysql.hx:69: characters 3-36
		return new MysqlResultSet($result);
	}

	/**
	 * @return void
	 */
	public function rollback () {
		#/home/bubar/haxe/versions/4.0.0-rc.1/std/php/_std/sys/db/Mysql.hx:115: characters 3-31
		$success = $this->db->rollback();
		#/home/bubar/haxe/versions/4.0.0-rc.1/std/php/_std/sys/db/Mysql.hx:116: characters 3-22
		if (!$success) {
			#/home/bubar/haxe/versions/4.0.0-rc.1/std/php/_std/sys/db/Mysql.hx:116: characters 17-22
			throw new HxException("Failed to rollback transaction: " . ($this->db->error??'null'));
		}
	}

	/**
	 * @return void
	 */
	public function startTransaction () {
		#/home/bubar/haxe/versions/4.0.0-rc.1/std/php/_std/sys/db/Mysql.hx:105: characters 3-40
		$success = $this->db->begin_transaction();
		#/home/bubar/haxe/versions/4.0.0-rc.1/std/php/_std/sys/db/Mysql.hx:106: characters 3-22
		if (!$success) {
			#/home/bubar/haxe/versions/4.0.0-rc.1/std/php/_std/sys/db/Mysql.hx:106: characters 17-22
			throw new HxException("Failed to start transaction: " . ($this->db->error??'null'));
		}
	}
}

Boot::registerClass(MysqlConnection::class, 'sys.db._Mysql.MysqlConnection');
