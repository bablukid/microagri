<?php
/**
 * Generated by Haxe 4.0.0-rc.1+1fdd3d5
 */

namespace tink\core;

use \tink\core\_Future\SyncFuture;
use \php\Boot;
use \tink\core\_Future\SimpleFuture;
use \tink\core\_Callback\LinkObject;
use \tink\core\_Callback\Callback_Impl_;
use \tink\core\_Callback\CallbackList_Impl_;
use \tink\core\_Lazy\LazyConst;
use \tink\core\_Future\FutureObject;

class FutureTrigger implements FutureObject {
	/**
	 * @var \Array_hx
	 */
	public $list;
	/**
	 * @var mixed
	 */
	public $result;

	/**
	 * @param FutureObject $f
	 * 
	 * @return FutureObject
	 */
	static public function gatherFuture ($f) {
		#/home/bubar/haxe/haxe_libraries/tink_core/1.21.0/haxelib/src/tink/core/Future.hx:362: characters 5-19
		$op = null;
		#/home/bubar/haxe/haxe_libraries/tink_core/1.21.0/haxelib/src/tink/core/Future.hx:363: lines 363-370
		$this1 = new SimpleFuture(function ($cb)  use (&$op, &$f) {
			#/home/bubar/haxe/haxe_libraries/tink_core/1.21.0/haxelib/src/tink/core/Future.hx:364: lines 364-368
			if ($op === null) {
				#/home/bubar/haxe/haxe_libraries/tink_core/1.21.0/haxelib/src/tink/core/Future.hx:365: characters 9-33
				$op = new FutureTrigger();
				#/home/bubar/haxe/haxe_libraries/tink_core/1.21.0/haxelib/src/tink/core/Future.hx:366: characters 9-29
				$f->handle(Boot::getInstanceClosure($op, 'trigger'));
				#/home/bubar/haxe/haxe_libraries/tink_core/1.21.0/haxelib/src/tink/core/Future.hx:367: characters 9-17
				$f = null;
			}
			#/home/bubar/haxe/haxe_libraries/tink_core/1.21.0/haxelib/src/tink/core/Future.hx:369: characters 7-27
			return $op->handle($cb);
		});
		#/home/bubar/haxe/haxe_libraries/tink_core/1.21.0/haxelib/src/tink/core/Future.hx:363: lines 363-370
		return $this1;
	}

	/**
	 * @return void
	 */
	public function __construct () {
		#/home/bubar/haxe/haxe_libraries/tink_core/1.21.0/haxelib/src/tink/core/Future.hx:323: characters 17-35
		$this1 = new \Array_hx();
		#/home/bubar/haxe/haxe_libraries/tink_core/1.21.0/haxelib/src/tink/core/Future.hx:323: characters 5-35
		$this->list = $this1;
	}

	/**
	 * @return FutureObject
	 */
	public function asFuture () {
		#/home/bubar/haxe/haxe_libraries/tink_core/1.21.0/haxelib/src/tink/core/Future.hx:359: characters 5-16
		return $this;
	}

	/**
	 * @return FutureTrigger
	 */
	public function eager () {
		#/home/bubar/haxe/haxe_libraries/tink_core/1.21.0/haxelib/src/tink/core/Future.hx:356: characters 5-16
		return $this;
	}

	/**
	 * @param \Closure $f
	 * 
	 * @return FutureObject
	 */
	public function flatMap ($f) {
		#/home/bubar/haxe/haxe_libraries/tink_core/1.21.0/haxelib/src/tink/core/Future.hx:344: characters 19-23
		$_g = $this->list;
		#/home/bubar/haxe/haxe_libraries/tink_core/1.21.0/haxelib/src/tink/core/Future.hx:345: lines 345-349
		if ($_g === null) {
			#/home/bubar/haxe/haxe_libraries/tink_core/1.21.0/haxelib/src/tink/core/Future.hx:345: characters 18-27
			return $f($this->result);
		} else {
			#/home/bubar/haxe/haxe_libraries/tink_core/1.21.0/haxelib/src/tink/core/Future.hx:346: characters 12-13
			$v = $_g;
			#/home/bubar/haxe/haxe_libraries/tink_core/1.21.0/haxelib/src/tink/core/Future.hx:347: characters 9-39
			$ret = new FutureTrigger();
			#/home/bubar/haxe/haxe_libraries/tink_core/1.21.0/haxelib/src/tink/core/Future.hx:348: characters 9-56
			CallbackList_Impl_::add($this->list, function ($v1)  use (&$f, &$ret) {
				#/home/bubar/haxe/haxe_libraries/tink_core/1.21.0/haxelib/src/tink/core/Future.hx:348: characters 31-55
				$f($v1)->handle(Boot::getInstanceClosure($ret, 'trigger'));
			});
			#/home/bubar/haxe/haxe_libraries/tink_core/1.21.0/haxelib/src/tink/core/Future.hx:349: characters 9-12
			return $ret;
		}
	}

	/**
	 * @return FutureTrigger
	 */
	public function gather () {
		#/home/bubar/haxe/haxe_libraries/tink_core/1.21.0/haxelib/src/tink/core/Future.hx:353: characters 5-16
		return $this;
	}

	/**
	 * @param \Closure $callback
	 * 
	 * @return LinkObject
	 */
	public function handle ($callback) {
		#/home/bubar/haxe/haxe_libraries/tink_core/1.21.0/haxelib/src/tink/core/Future.hx:326: characters 19-23
		$_g = $this->list;
		#/home/bubar/haxe/haxe_libraries/tink_core/1.21.0/haxelib/src/tink/core/Future.hx:327: lines 327-331
		if ($_g === null) {
			#/home/bubar/haxe/haxe_libraries/tink_core/1.21.0/haxelib/src/tink/core/Future.hx:328: characters 9-32
			Callback_Impl_::invoke($callback, $this->result);
			#/home/bubar/haxe/haxe_libraries/tink_core/1.21.0/haxelib/src/tink/core/Future.hx:329: characters 9-13
			return null;
		} else {
			#/home/bubar/haxe/haxe_libraries/tink_core/1.21.0/haxelib/src/tink/core/Future.hx:330: characters 12-13
			$v = $_g;
			#/home/bubar/haxe/haxe_libraries/tink_core/1.21.0/haxelib/src/tink/core/Future.hx:331: characters 9-24
			return CallbackList_Impl_::add($v, $callback);
		}
	}

	/**
	 * @param \Closure $f
	 * 
	 * @return FutureObject
	 */
	public function map ($f) {
		#/home/bubar/haxe/haxe_libraries/tink_core/1.21.0/haxelib/src/tink/core/Future.hx:335: characters 19-23
		$_g = $this->list;
		#/home/bubar/haxe/haxe_libraries/tink_core/1.21.0/haxelib/src/tink/core/Future.hx:336: lines 336-340
		if ($_g === null) {
			#/home/bubar/haxe/haxe_libraries/tink_core/1.21.0/haxelib/src/tink/core/Future.hx:336: characters 18-40
			return new SyncFuture(new LazyConst($f($this->result)));
		} else {
			#/home/bubar/haxe/haxe_libraries/tink_core/1.21.0/haxelib/src/tink/core/Future.hx:337: characters 12-13
			$v = $_g;
			#/home/bubar/haxe/haxe_libraries/tink_core/1.21.0/haxelib/src/tink/core/Future.hx:338: characters 9-39
			$ret = new FutureTrigger();
			#/home/bubar/haxe/haxe_libraries/tink_core/1.21.0/haxelib/src/tink/core/Future.hx:339: characters 9-49
			CallbackList_Impl_::add($this->list, function ($v1)  use (&$f, &$ret) {
				#/home/bubar/haxe/haxe_libraries/tink_core/1.21.0/haxelib/src/tink/core/Future.hx:339: characters 43-47
				$tmp = $f($v1);
				#/home/bubar/haxe/haxe_libraries/tink_core/1.21.0/haxelib/src/tink/core/Future.hx:339: characters 31-48
				$ret->trigger($tmp);
			});
			#/home/bubar/haxe/haxe_libraries/tink_core/1.21.0/haxelib/src/tink/core/Future.hx:340: characters 9-12
			return $ret;
		}
	}

	/**
	 *  Triggers a value for this future
	 * 
	 * @param mixed $result
	 * 
	 * @return bool
	 */
	public function trigger ($result) {
		#/home/bubar/haxe/haxe_libraries/tink_core/1.21.0/haxelib/src/tink/core/Future.hx:378: lines 378-386
		if ($this->list === null) {
			#/home/bubar/haxe/haxe_libraries/tink_core/1.21.0/haxelib/src/tink/core/Future.hx:378: characters 25-30
			return false;
		} else {
			#/home/bubar/haxe/haxe_libraries/tink_core/1.21.0/haxelib/src/tink/core/Future.hx:380: characters 9-30
			$list = $this->list;
			#/home/bubar/haxe/haxe_libraries/tink_core/1.21.0/haxelib/src/tink/core/Future.hx:381: characters 9-25
			$this->list = null;
			#/home/bubar/haxe/haxe_libraries/tink_core/1.21.0/haxelib/src/tink/core/Future.hx:382: characters 9-29
			$this->result = $result;
			#/home/bubar/haxe/haxe_libraries/tink_core/1.21.0/haxelib/src/tink/core/Future.hx:383: characters 9-28
			CallbackList_Impl_::invoke($list, $result);
			#/home/bubar/haxe/haxe_libraries/tink_core/1.21.0/haxelib/src/tink/core/Future.hx:384: characters 9-21
			CallbackList_Impl_::clear($list);
			#/home/bubar/haxe/haxe_libraries/tink_core/1.21.0/haxelib/src/tink/core/Future.hx:385: characters 9-13
			return true;
		}
	}
}

Boot::registerClass(FutureTrigger::class, 'tink.core.FutureTrigger');
