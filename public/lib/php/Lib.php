<?php
/**
 * Generated by Haxe 4.0.0-rc.1+1fdd3d5
 */

namespace php;

use \php\_Boot\HxAnon;
use \php\_Boot\HxString;
use \haxe\ds\StringMap;
use \php\_Boot\HxException;

/**
 * Platform-specific PHP Library. Provides some platform-specific functions
 * for the PHP target, such as conversion from Haxe types to native types
 * and vice-versa.
 */
class Lib {
	/**
	 * @var bool
	 */
	static public $loaded = false;

	/**
	 * Tries to load all compiled php files and returns list of types.
	 * 
	 * @return mixed
	 */
	static public function getClasses () {
		#/home/bubar/haxe/versions/4.0.0-rc.1/std/php/Lib.hx:147: lines 147-151
		if (!Lib::$loaded) {
			#/home/bubar/haxe/versions/4.0.0-rc.1/std/php/Lib.hx:148: characters 4-17
			Lib::$loaded = true;
			#/home/bubar/haxe/versions/4.0.0-rc.1/std/php/Lib.hx:149: characters 4-70
			$reflection = new \ReflectionClass(Boot::getPhpName("php.Boot"));
			#/home/bubar/haxe/versions/4.0.0-rc.1/std/php/Lib.hx:150: characters 4-56
			Lib::loadLib(dirname($reflection->getFileName(), 2));
		}
		#/home/bubar/haxe/versions/4.0.0-rc.1/std/php/Lib.hx:153: characters 3-27
		$result = new HxAnon();
		#/home/bubar/haxe/versions/4.0.0-rc.1/std/php/Lib.hx:154: lines 154-165
		$collection = Boot::getRegisteredAliases();
		foreach ($collection as $key => $value) {
			#/home/bubar/haxe/versions/4.0.0-rc.1/std/php/Lib.hx:155: characters 4-36
			$parts = HxString::split($value, ".");
			#/home/bubar/haxe/versions/4.0.0-rc.1/std/php/Lib.hx:156: characters 4-21
			$obj = $result;
			#/home/bubar/haxe/versions/4.0.0-rc.1/std/php/Lib.hx:157: lines 157-163
			while ($parts->length > 1) {
				#/home/bubar/haxe/versions/4.0.0-rc.1/std/php/Lib.hx:158: characters 16-29
				if ($parts->length > 0) {
					$parts->length--;
				}
				#/home/bubar/haxe/versions/4.0.0-rc.1/std/php/Lib.hx:158: characters 5-30
				$pack = array_shift($parts->arr);
				#/home/bubar/haxe/versions/4.0.0-rc.1/std/php/Lib.hx:159: characters 21-24
				$tmp = $obj;
				#/home/bubar/haxe/versions/4.0.0-rc.1/std/php/Lib.hx:159: lines 159-161
				if ($tmp->{$pack} === null) {
					#/home/bubar/haxe/versions/4.0.0-rc.1/std/php/Lib.hx:160: characters 22-25
					$tmp1 = $obj;
					#/home/bubar/haxe/versions/4.0.0-rc.1/std/php/Lib.hx:160: characters 6-36
					$tmp1->{$pack} = new HxAnon();
				}
				#/home/bubar/haxe/versions/4.0.0-rc.1/std/php/Lib.hx:162: characters 24-27
				$tmp2 = $obj;
				#/home/bubar/haxe/versions/4.0.0-rc.1/std/php/Lib.hx:162: characters 5-34
				$obj = $tmp2->{$pack};
			}
			#/home/bubar/haxe/versions/4.0.0-rc.1/std/php/Lib.hx:164: characters 20-23
			$tmp3 = $obj;
			#/home/bubar/haxe/versions/4.0.0-rc.1/std/php/Lib.hx:164: characters 4-58
			$tmp3->{($parts->arr[0] ?? null)} = Boot::getClass($key);

		}

		#/home/bubar/haxe/versions/4.0.0-rc.1/std/php/Lib.hx:167: characters 3-16
		return $result;
	}

	/**
	 * @param mixed $arr
	 * 
	 * @return StringMap
	 */
	static public function hashOfAssociativeArray ($arr) {
		#/home/bubar/haxe/versions/4.0.0-rc.1/std/php/Lib.hx:101: characters 3-32
		$result = new StringMap();
		#/home/bubar/haxe/versions/4.0.0-rc.1/std/php/Lib.hx:102: characters 19-36
		$result->data = $arr;
		#/home/bubar/haxe/versions/4.0.0-rc.1/std/php/Lib.hx:103: characters 3-16
		return $result;
	}

	/**
	 * Loads types defined in the specified directory.
	 * 
	 * @param string $pathToLib
	 * 
	 * @return void
	 */
	static public function loadLib ($pathToLib) {
		#/home/bubar/haxe/versions/4.0.0-rc.1/std/php/Lib.hx:175: characters 3-49
		$absolutePath = realpath($pathToLib);
		#/home/bubar/haxe/versions/4.0.0-rc.1/std/php/Lib.hx:176: characters 3-34
		if ($absolutePath === false) {
			#/home/bubar/haxe/versions/4.0.0-rc.1/std/php/Lib.hx:176: characters 29-34
			throw new HxException("Failed to read path: " . ($pathToLib??'null'));
		}
		#/home/bubar/haxe/versions/4.0.0-rc.1/std/php/Lib.hx:177: lines 177-181
		$collection = glob("" . ($absolutePath??'null') . "/*.php");
		foreach ($collection as $key => $value) {
			#/home/bubar/haxe/versions/4.0.0-rc.1/std/php/Lib.hx:178: lines 178-180
			if (!is_dir($value)) {
				#/home/bubar/haxe/versions/4.0.0-rc.1/std/php/Lib.hx:179: characters 5-34
				require_once($value);
			}
		}

		#/home/bubar/haxe/versions/4.0.0-rc.1/std/php/Lib.hx:182: lines 182-184
		$collection1 = glob("" . ($absolutePath??'null') . "/*", GLOB_ONLYDIR);
		foreach ($collection1 as $key1 => $value1) {
			#/home/bubar/haxe/versions/4.0.0-rc.1/std/php/Lib.hx:183: characters 4-20
			Lib::loadLib($value1);
		}

	}
}

Boot::registerClass(Lib::class, 'php.Lib');
