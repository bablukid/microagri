<?php
/**
 * Generated by Haxe 4.0.0-rc.1+1fdd3d5
 */

namespace db;

use \php\_Boot\HxAnon;
use \php\Boot;
use \sys\db\Object_hx;
use \sys\db\Manager;
use \php\_Boot\HxException;

class Question extends Object_hx {
	/**
	 * @var Manager
	 */
	static public $manager;

	/**
	 * @var object
	 */
	public $cache_data;
	/**
	 * @var mixed
	 */
	public $data;
	/**
	 * @var mixed
	 */
	public $data_data;
	/**
	 * @var int
	 */
	public $data_type;
	/**
	 * @var string
	 */
	public $description;
	/**
	 * @var int
	 */
	public $id;
	/**
	 * @var string
	 */
	public $label;
	/**
	 * @var string
	 */
	public $question;
	/**
	 * @var string
	 */
	public $ref;
	/**
	 * @var bool
	 */
	public $required;

	/**
	 * @param string $ref
	 * 
	 * @return Question
	 */
	static public function getByRef ($ref) {
		#src/db/Question.hx:43: characters 9-47
		return Question::$manager->unsafeObjects("SELECT * FROM Question WHERE ref = " . (Manager::quoteAny($ref)??'null'), false)->first();
	}

	/**
	 * Return type choices for forms
	 * 
	 * @return \Array_hx
	 */
	static public function getTypes () {
		#src/db/Question.hx:57: lines 57-72
		return \Array_hx::wrap([
			new HxAnon([
				"label" => "Ligne de texte",
				"value" => "QString",
			]),
			new HxAnon([
				"label" => "Bloc de texte",
				"value" => "QText",
			]),
			new HxAnon([
				"label" => "Liste à choix unique",
				"value" => "QRadio",
			]),
			new HxAnon([
				"label" => "Cases à cocher",
				"value" => "QCheckbox",
			]),
		]);
	}

	/**
	 * @return void
	 */
	public function __construct () {
		#src/db/Question.hx:31: lines 31-74
		parent::__construct();
	}

	/**
	 * @return Manager
	 */
	public function __getManager () {
		#/home/bubar/projects/spod/src/sys/db/RecordMacros.hx:1432: characters 19-40
		return Question::$manager;
	}

	/**
	 * @return mixed
	 */
	public function get_data () {
		#/home/bubar/projects/spod/src/sys/db/RecordMacros.hx:1283: characters 20-154
		if ($this->cache_data === null) {
			#/home/bubar/projects/spod/src/sys/db/RecordMacros.hx:1283: characters 44-113
			$this->cache_data = new HxAnon(["v" => Question::$manager->doUnserialize("data_data", $this->data_data)]);
			#/home/bubar/projects/spod/src/sys/db/RecordMacros.hx:1283: characters 115-151
			\Reflect::setField($this, "data_data", new HxAnon());
		}
		#/home/bubar/projects/spod/src/sys/db/RecordMacros.hx:1283: characters 156-172
		return $this->cache_data->v;
	}

	/**
	 * @return QuestionType
	 */
	public function get_type () {
		#/home/bubar/projects/spod/src/sys/db/RecordMacros.hx:1314: characters 25-90
		if ($this->data_type === null) {
			#/home/bubar/projects/spod/src/sys/db/RecordMacros.hx:1314: characters 43-47
			return null;
		} else {
			#/home/bubar/projects/spod/src/sys/db/RecordMacros.hx:1314: characters 50-90
			return \Type::createEnumIndex(Boot::getClass(QuestionType::class), $this->data_type);
		}
	}

	/**
	 * @return void
	 */
	public function insert () {
		#src/db/Question.hx:48: characters 9-57
		if (Question::$manager->unsafeCount("SELECT COUNT(*) FROM Question WHERE ref = " . (Manager::quoteAny($this->ref)??'null')) > 0) {
			#src/db/Question.hx:48: characters 52-57
			throw new HxException("Il y a déjà une question avec la référence " . ($this->ref??'null'));
		}
		#src/db/Question.hx:50: characters 9-23
		parent::insert();
	}

	/**
	 * @param mixed $_v
	 * 
	 * @return mixed
	 */
	public function set_data ($_v) {
		#/home/bubar/projects/spod/src/sys/db/RecordMacros.hx:1289: characters 20-106
		if ($this->cache_data === null) {
			#/home/bubar/projects/spod/src/sys/db/RecordMacros.hx:1289: characters 44-64
			$this->cache_data = new HxAnon(["v" => $_v]);
			#/home/bubar/projects/spod/src/sys/db/RecordMacros.hx:1289: characters 66-83
			$this->data_data = new HxAnon();
		} else {
			#/home/bubar/projects/spod/src/sys/db/RecordMacros.hx:1289: characters 92-106
			$this->cache_data->v = $_v;
		}
		#/home/bubar/projects/spod/src/sys/db/RecordMacros.hx:1289: characters 108-117
		return $_v;
	}

	/**
	 * @param QuestionType $_v
	 * 
	 * @return QuestionType
	 */
	public function set_type ($_v) {
		#/home/bubar/projects/spod/src/sys/db/RecordMacros.hx:1322: characters 14-67
		$this->data_type = ($_v === null ? null : Boot::dynamicField($_v, 'index'));
		#/home/bubar/projects/spod/src/sys/db/RecordMacros.hx:1322: characters 69-78
		return $_v;
	}

	/**
	 * @internal
	 * @access private
	 */
	static public function __hx__init ()
	{
		static $called = false;
		if ($called) return;
		$called = true;


		self::$manager = new Manager(Boot::getClass(Question::class));
	}
}

Boot::registerClass(Question::class, 'db.Question');
Boot::registerMeta(Question::class, new HxAnon(["obj" => new HxAnon(["rtti" => \Array_hx::wrap(["oy7:hfieldsby4:typeoy4:nameR1y1:tjy17:sys.db.RecordType:31:1y15:db.QuestionTypey6:isNullfgy8:requiredoR2R7R3jR4:8:0R6fgy3:refoR2R8R3jR4:9:1i64R6fgy8:questionoR2R9R3jR4:9:1i256R6fgy5:labeloR2R10R3jR4:9:1i128R6fgy2:idoR2R11R3jR4:0:0R6fgy11:descriptionoR2R12R3jR4:15:0R6fgy4:dataoR2R13R3jR4:30:0R6fghR2y8:Questiony9:relationsahy7:indexesahy6:fieldsar12r6r8r10r14r2r16r4hy3:keyaR11hg"])])]));
Boot::registerGetters('db\\Question', [
	'data' => true,
	'type' => true
]);
Boot::registerSetters('db\\Question', [
	'data' => true,
	'type' => true
]);
Question::__hx__init();
