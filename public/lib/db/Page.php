<?php
/**
 * Generated by Haxe 4.0.0-rc.1+1fdd3d5
 */

namespace db;

use \php\_Boot\HxAnon;
use \php\Boot;
use \sys\db\Object_hx;
use \sys\db\Manager;
use \haxe\ds\StringMap;
use \php\_Boot\HxException;

class Page extends Object_hx {
	/**
	 * @var Manager
	 */
	static public $manager;

	/**
	 * @var Chapitre
	 */
	public $chapitre;
	/**
	 * @var mixed
	 */
	public $chapitreId;
	/**
	 * @var string
	 */
	public $description;
	/**
	 * @var int
	 */
	public $id;
	/**
	 * @var int
	 */
	public $order;
	/**
	 * @var string
	 */
	public $title;

	/**
	 * @return StringMap
	 */
	static public function getLabels () {
		#src/db/Page.hx:28: lines 28-32
		$_g = new StringMap();
		$_g->data["title"] = "Titre";
		$_g->data["description"] = "Description";
		$_g->data["order"] = "Ordre";
		return $_g;
	}

	/**
	 * @return void
	 */
	public function __construct () {
		#src/db/Page.hx:17: characters 9-16
		parent::__construct();
	}

	/**
	 * @return Manager
	 */
	public function __getManager () {
		#/home/bubar/projects/spod/src/sys/db/RecordMacros.hx:1432: characters 19-40
		return Page::$manager;
	}

	/**
	 * @return \Array_hx
	 */
	public function getQuestions () {
		#src/db/Page.hx:23: characters 9-84
		$qp = QuestionPage::$manager->unsafeObjects("SELECT * FROM QuestionPage WHERE pageId = " . (Manager::quoteAny(Page::$manager->unsafeGetId($this))??'null') . " ORDER BY `order`", false);
		#src/db/Page.hx:24: characters 9-63
		return \Lambda::array($qp->map(function ($qp1) {
			#src/db/Page.hx:24: characters 36-54
			return $qp1->get_question();
		}));
	}

	/**
	 * @return Chapitre
	 */
	public function get_chapitre () {
		#src/db/Page.hx:13: characters 41-75
		return Chapitre::$manager->__hx__renamed__get($this, "chapitre", "chapitreId", false);
	}

	/**
	 * @param Question $q
	 * @param string $move
	 * 
	 * @return void
	 */
	public function moveQuestion ($q, $move) {
		#src/db/Page.hx:37: characters 9-83
		$qp = QuestionPage::$manager->unsafeObjects("SELECT * FROM QuestionPage WHERE questionId = " . (Manager::quoteAny(Question::$manager->unsafeGetId($q))??'null') . ((" AND pageId = " . (Manager::quoteAny(Page::$manager->unsafeGetId($this))??'null'))??'null'), true)->first();
		#src/db/Page.hx:38: characters 9-27
		if ($qp === null) {
			#src/db/Page.hx:38: characters 22-27
			throw new HxException("cette question n'est pas dans cette page");
		}
		#src/db/Page.hx:40: characters 9-45
		if (($move === "up") && ($qp->order === 0)) {
			#src/db/Page.hx:40: characters 39-45
			return;
		}
		#src/db/Page.hx:41: characters 9-69
		if (($move === "down") && ($qp->order === ($this->getQuestions()->length - 1))) {
			#src/db/Page.hx:41: characters 63-69
			return;
		}
		#src/db/Page.hx:43: characters 9-37
		$currentOrder = $qp->order;
		#src/db/Page.hx:46: lines 46-55
		if ($move === "up") {
			#src/db/Page.hx:47: characters 13-23
			$qp->order--;
			#src/db/Page.hx:48: characters 13-96
			$other = QuestionPage::$manager->unsafeObjects("SELECT * FROM QuestionPage WHERE pageId = " . (Manager::quoteAny(Page::$manager->unsafeGetId($this))??'null') . ((" AND `order` = " . (Manager::quoteAny($qp->order)??'null'))??'null'), true)->first();
			#src/db/Page.hx:49: lines 49-52
			if ($other !== null) {
				#src/db/Page.hx:50: characters 17-30
				$other->order++;
				#src/db/Page.hx:51: characters 17-31
				$other->update();
			}
			#src/db/Page.hx:53: characters 13-24
			$qp->update();
		}
		#src/db/Page.hx:56: lines 56-64
		if ($move === "down") {
			#src/db/Page.hx:57: characters 13-23
			$qp->order++;
			#src/db/Page.hx:58: characters 13-96
			$other1 = QuestionPage::$manager->unsafeObjects("SELECT * FROM QuestionPage WHERE pageId = " . (Manager::quoteAny(Page::$manager->unsafeGetId($this))??'null') . ((" AND `order` = " . (Manager::quoteAny($qp->order)??'null'))??'null'), true)->first();
			#src/db/Page.hx:59: lines 59-62
			if ($other1 !== null) {
				#src/db/Page.hx:60: characters 17-30
				$other1->order--;
				#src/db/Page.hx:61: characters 17-31
				$other1->update();
			}
			#src/db/Page.hx:63: characters 13-24
			$qp->update();
		}
	}

	/**
	 * @param Chapitre $_v
	 * 
	 * @return Chapitre
	 */
	public function set_chapitre ($_v) {
		#src/db/Page.hx:13: characters 41-75
		return Chapitre::$manager->__hx__renamed__set($this, "chapitre", "chapitreId", $_v);
	}

	/**
	 * @internal
	 * @access private
	 */
	static public function __hx__init ()
	{
		static $called = false;
		if ($called) return;
		$called = true;


		self::$manager = new Manager(Boot::getClass(Page::class));
	}
}

Boot::registerClass(Page::class, 'db.Page');
Boot::registerMeta(Page::class, new HxAnon([
	"obj" => new HxAnon(["rtti" => \Array_hx::wrap(["oy7:hfieldsby5:titleoy4:nameR1y1:tjy17:sys.db.RecordType:9:1i256y6:isNullfgy5:orderoR2R6R3jR4:1:0R5fgy2:idoR2R7R3jR4:0:0R5fgy11:descriptionoR2R8R3jR4:15:0R5fgy10:chapitreIdoR2R9R3r5R5fghR2y4:Pagey9:relationsaoy6:moduley11:db.Chapitrey7:cascadefy4:lockfy4:propy8:chapitreR5fy4:typeR13y3:keyR9ghy7:indexesahy6:fieldsar6r2r8r4r10hR19aR7hg"])]),
	"fields" => new HxAnon(["chapitre" => new HxAnon(["hideInForms" => null])]),
]));
Boot::registerGetters('db\\Page', [
	'chapitre' => true
]);
Boot::registerSetters('db\\Page', [
	'chapitre' => true
]);
Page::__hx__init();
