<?php
/**
 * Generated by Haxe 4.0.0-rc.1+1fdd3d5
 */

namespace form;

use \php\Boot;
use \sugoi\form\elements\StringInput;
use \sugoi\form\elements\CheckboxGroup;

/**
 * Checkbox group with "other" field
 */
class Checkboxes extends CheckboxGroup {
	/**
	 * @var StringInput
	 */
	public $other;

	/**
	 * @param string $name
	 * @param string $label
	 * @param \Array_hx $data
	 * @param \Array_hx $selected
	 * @param bool $verticle
	 * @param bool $labelRight
	 * 
	 * @return void
	 */
	public function __construct ($name, $label, $data, $selected = null, $verticle = true, $labelRight = true) {
		#src/form/Checkboxes.hx:11: lines 11-28
		if ($verticle === null) {
			$verticle = true;
		}
		if ($labelRight === null) {
			$labelRight = true;
		}
		#src/form/Checkboxes.hx:13: characters 9-60
		parent::__construct($name, $label, $data, $selected, $verticle, $labelRight);
		#src/form/Checkboxes.hx:16: characters 9-20
		$x = new \Array_hx();
		#src/form/Checkboxes.hx:17: lines 17-21
		if ($selected !== null) {
			#src/form/Checkboxes.hx:18: lines 18-20
			$_g = 0;
			while ($_g < $selected->length) {
				unset($s);
				#src/form/Checkboxes.hx:18: characters 18-19
				$s = ($selected->arr[$_g] ?? null);
				#src/form/Checkboxes.hx:18: lines 18-20
				++$_g;
				#src/form/Checkboxes.hx:19: characters 17-81
				if (!\Lambda::exists($data, function ($x1)  use (&$s) {
					#src/form/Checkboxes.hx:19: characters 52-69
					return $x1->value === $s;
				})) {
					#src/form/Checkboxes.hx:19: characters 72-81
					$x->arr[$x->length] = $s;
					++$x->length;
				}
			}
		}
		#src/form/Checkboxes.hx:23: characters 9-30
		$x2 = $x->join(", ");
		#src/form/Checkboxes.hx:24: characters 9-77
		$this->other = new StringInput(($name??'null') . "_other", "other", $x2);
		#src/form/Checkboxes.hx:25: characters 9-30
		$this->other->internal = true;
		#src/form/Checkboxes.hx:26: characters 9-50
		$this->other->attributes = "placeholder='Autres'";
	}

	/**
	 * @return void
	 */
	public function populate () {
		#src/form/Checkboxes.hx:41: characters 9-25
		parent::populate();
		#src/form/Checkboxes.hx:42: characters 9-81
		$v = (\App::$current->params->data[($this->parentForm->name??'null') . "_" . ($this->name??'null') . "_other"] ?? null);
		#src/form/Checkboxes.hx:43: characters 9-27
		$_this = $this->value;
		$_this->arr[$_this->length] = $v;
		++$_this->length;

	}

	/**
	 * @return string
	 */
	public function render () {
		#src/form/Checkboxes.hx:33: characters 9-43
		$this->other->parentForm = $this->parentForm;
		#src/form/Checkboxes.hx:34: characters 9-32
		$s = parent::render();
		#src/form/Checkboxes.hx:35: characters 9-32
		return ($s??'null') . ($this->other->render()??'null');
	}
}

Boot::registerClass(Checkboxes::class, 'form.Checkboxes');
