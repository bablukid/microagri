<?php
/**
 * Generated by Haxe 4.0.0-rc.1+1fdd3d5
 */

namespace form;

use \php\Boot;
use \sugoi\form\elements\CheckboxGroup;
use \php\Web;
use \php\_Boot\HxString;

/**
 * Checkbox group with one field by checkbox
 */
class CheckboxesWithField extends CheckboxGroup {
	/**
	 * @var \Array_hx
	 */
	public $extraFieldValues;
	/**
	 * @var \Array_hx
	 */
	public $extraFields;

	/**
	 * @param string $name
	 * @param string $label
	 * @param \Array_hx $data
	 * @param \Array_hx $selected
	 * @param bool $verticle
	 * @param bool $labelRight
	 * 
	 * @return void
	 */
	public function __construct ($name, $label, $data, $selected = null, $verticle = true, $labelRight = true) {
		#src/form/CheckboxesWithField.hx:13: lines 13-38
		if ($verticle === null) {
			$verticle = true;
		}
		if ($labelRight === null) {
			$labelRight = true;
		}
		#src/form/CheckboxesWithField.hx:15: characters 3-22
		$selected2 = new \Array_hx();
		#src/form/CheckboxesWithField.hx:16: characters 3-24
		$this->extraFieldValues = new \Array_hx();
		#src/form/CheckboxesWithField.hx:17: lines 17-30
		if ($selected !== null) {
			#src/form/CheckboxesWithField.hx:18: lines 18-29
			$_g = 0;
			while ($_g < $selected->length) {
				#src/form/CheckboxesWithField.hx:18: characters 9-10
				$s = ($selected->arr[$_g] ?? null);
				#src/form/CheckboxesWithField.hx:18: lines 18-29
				++$_g;
				#src/form/CheckboxesWithField.hx:19: lines 19-28
				if (HxString::indexOf($s, ";") > -1) {
					#src/form/CheckboxesWithField.hx:20: characters 6-27
					$x = HxString::split($s, ";");
					#src/form/CheckboxesWithField.hx:22: characters 22-31
					if ($x->length > 0) {
						$x->length--;
					}
					#src/form/CheckboxesWithField.hx:22: characters 6-33
					$x1 = array_shift($x->arr);
					$selected2->arr[$selected2->length] = $x1;
					++$selected2->length;

					#src/form/CheckboxesWithField.hx:24: lines 24-27
					$_g1 = 0;
					$_g11 = (clone $x)->length;
					while ($_g1 < $_g11) {
						$i = $_g1++;
						#src/form/CheckboxesWithField.hx:25: characters 7-61
						if (($this->extraFieldValues->arr[$i] ?? null) === null) {
							#src/form/CheckboxesWithField.hx:25: characters 37-61
							$this->extraFieldValues[$i] = new \Array_hx();
						}
						#src/form/CheckboxesWithField.hx:26: characters 7-44
						$_this = ($this->extraFieldValues->arr[$i] ?? null);
						#src/form/CheckboxesWithField.hx:26: characters 33-42
						if ($x->length > 0) {
							$x->length--;
						}
						#src/form/CheckboxesWithField.hx:26: characters 7-44
						$x2 = array_shift($x->arr);
						$_this->arr[$_this->length] = $x2;
						++$_this->length;

					}

				}
			}
		}
		#src/form/CheckboxesWithField.hx:32: characters 3-23
		$selected = $selected2;
		#src/form/CheckboxesWithField.hx:36: characters 3-54
		parent::__construct($name, $label, $data, $selected, $verticle, $labelRight);
	}

	/**
	 * @return void
	 */
	public function populate () {
		#src/form/CheckboxesWithField.hx:117: characters 3-66
		$v = Web::getParamValues(($this->parentForm->name??'null') . "_" . ($this->name??'null'));
		#src/form/CheckboxesWithField.hx:118: characters 3-24
		$this->extraFieldValues = new \Array_hx();
		#src/form/CheckboxesWithField.hx:119: lines 119-121
		$_g = 0;
		$_g1 = $this->extraFields;
		while ($_g < $_g1->length) {
			#src/form/CheckboxesWithField.hx:119: characters 8-9
			$e = ($_g1->arr[$_g] ?? null);
			#src/form/CheckboxesWithField.hx:119: lines 119-121
			++$_g;
			#src/form/CheckboxesWithField.hx:120: characters 4-100
			$_this = $this->extraFieldValues;
			$x = Web::getParamValues(($this->parentForm->name??'null') . "_" . ($this->name??'null') . "_" . ($e->value??'null'));
			$_this->arr[$_this->length] = $x;
			++$_this->length;

		}

		#src/form/CheckboxesWithField.hx:124: characters 3-13
		$this->value = new \Array_hx();
		#src/form/CheckboxesWithField.hx:126: lines 126-137
		if ($v !== null) {
			#src/form/CheckboxesWithField.hx:127: lines 127-136
			$_g2 = 0;
			while ($_g2 < $v->length) {
				#src/form/CheckboxesWithField.hx:127: characters 9-10
				$x1 = ($v->arr[$_g2] ?? null);
				#src/form/CheckboxesWithField.hx:127: lines 127-136
				++$_g2;
				#src/form/CheckboxesWithField.hx:128: lines 128-135
				$_g21 = 0;
				$_g3 = $this->data->length;
				while ($_g21 < $_g3) {
					$i = $_g21++;
					#src/form/CheckboxesWithField.hx:129: lines 129-134
					if (Boot::dynamicField(($this->data->arr[$i] ?? null), 'value') === $x1) {
						#src/form/CheckboxesWithField.hx:131: characters 7-17
						$r = $x1;
						#src/form/CheckboxesWithField.hx:132: characters 7-53
						$_g22 = 0;
						$_g31 = $this->extraFieldValues;
						while ($_g22 < $_g31->length) {
							#src/form/CheckboxesWithField.hx:132: characters 12-13
							$e1 = ($_g31->arr[$_g22] ?? null);
							#src/form/CheckboxesWithField.hx:132: characters 7-53
							++$_g22;
							#src/form/CheckboxesWithField.hx:132: characters 35-53
							$r = ($r??'null') . ";" . (($e1->arr[$i] ?? null)??'null');
						}

						#src/form/CheckboxesWithField.hx:133: characters 7-20
						$_this1 = $this->value;
						$_this1->arr[$_this1->length] = $r;
						++$_this1->length;

					}
				}

			}
		}
	}

	/**
	 * @return string
	 */
	public function render () {
		#src/form/CheckboxesWithField.hx:48: characters 3-14
		$s = "";
		#src/form/CheckboxesWithField.hx:49: characters 3-39
		$n = ($this->parentForm->name??'null') . "_" . ($this->name??'null');
		#src/form/CheckboxesWithField.hx:51: characters 3-29
		$tagCss = $this->getClasses();
		#src/form/CheckboxesWithField.hx:54: characters 3-13
		$c = 0;
		#src/form/CheckboxesWithField.hx:55: characters 3-34
		$datas = \Lambda::array($this->data);
		#src/form/CheckboxesWithField.hx:56: lines 56-110
		if ($datas !== null) {
			#src/form/CheckboxesWithField.hx:58: characters 4-58
			$rowsPerColumn = (int)(ceil($datas->length / $this->columns));
			#src/form/CheckboxesWithField.hx:59: characters 4-21
			$s = "<table><tr>";
			#src/form/CheckboxesWithField.hx:60: lines 60-107
			$_g = 0;
			$_g1 = $this->columns;
			while ($_g < $_g1) {
				$i = $_g++;
				#src/form/CheckboxesWithField.hx:62: characters 5-33
				$s = ($s??'null') . "<td valign=\"top\">\x0A";
				#src/form/CheckboxesWithField.hx:63: characters 5-21
				$s = ($s??'null') . "<table>\x0A";
				#src/form/CheckboxesWithField.hx:67: characters 17-46
				$s = ($s??'null') . "<tr><td></td><td></td>";
				#src/form/CheckboxesWithField.hx:68: lines 68-70
				$_g2 = 0;
				$_g11 = $this->extraFields;
				while ($_g2 < $_g11->length) {
					#src/form/CheckboxesWithField.hx:68: characters 9-13
					$extr = ($_g11->arr[$_g2] ?? null);
					#src/form/CheckboxesWithField.hx:68: lines 68-70
					++$_g2;
					#src/form/CheckboxesWithField.hx:69: characters 6-55
					$s = ($s??'null') . "<td class=\"text-center\">" . ($extr->label??'null') . "</td>";
				}

				#src/form/CheckboxesWithField.hx:71: characters 5-17
				$s = ($s??'null') . "</tr>";
				#src/form/CheckboxesWithField.hx:73: lines 73-104
				$_g21 = 0;
				$_g3 = $rowsPerColumn;
				while ($_g21 < $_g3) {
					$j = $_g21++;
					#src/form/CheckboxesWithField.hx:75: characters 6-34
					if ($c >= $datas->length) {
						#src/form/CheckboxesWithField.hx:75: characters 29-34
						break;
					}
					#src/form/CheckboxesWithField.hx:77: characters 6-17
					$s = ($s??'null') . "<tr>";
					#src/form/CheckboxesWithField.hx:79: characters 6-53
					$row = ($datas->arr[$c] ?? null);
					#src/form/CheckboxesWithField.hx:80: characters 6-23
					$checked = "";
					#src/form/CheckboxesWithField.hx:81: characters 6-27
					$extraValues = new \Array_hx();
					#src/form/CheckboxesWithField.hx:83: lines 83-88
					if (($this->value !== null) && \Lambda::has($this->value, $row->value)) {
						#src/form/CheckboxesWithField.hx:84: characters 7-26
						$checked = "checked";
						#src/form/CheckboxesWithField.hx:86: characters 7-51
						$index = \Lambda::indexOf($this->value, $row->value);
						#src/form/CheckboxesWithField.hx:87: characters 7-60
						$_g22 = 0;
						$_g31 = $this->extraFieldValues;
						while ($_g22 < $_g31->length) {
							#src/form/CheckboxesWithField.hx:87: characters 11-12
							$e = ($_g31->arr[$_g22] ?? null);
							#src/form/CheckboxesWithField.hx:87: characters 7-60
							++$_g22;
							#src/form/CheckboxesWithField.hx:87: characters 34-60
							$extraValues->arr[$extraValues->length] = ($e->arr[$index] ?? null);
							++$extraValues->length;

						}

					}
					#src/form/CheckboxesWithField.hx:90: characters 6-130
					$checkbox = "<input type=\"checkbox\" class=\"" . ($tagCss??'null') . "\" name=\"" . ($n??'null') . "[]\" id=\"" . ((($n??'null') . ($c??'null'))??'null') . "\" value=\"" . ($row->value??'null') . "\" " . ($checked??'null') . " ></input>\x0A";
					#src/form/CheckboxesWithField.hx:91: characters 6-108
					$label = "<label for=\"" . ($n??'null') . ($c??'null') . "\" class=\"" . "" . "\" >" . ($row->label??'null') . "</label>\x0A";
					#src/form/CheckboxesWithField.hx:94: characters 6-43
					$s = ($s??'null') . "<td>" . ($label??'null') . "&nbsp;</td>\x0A";
					#src/form/CheckboxesWithField.hx:95: characters 6-40
					$s = ($s??'null') . "<td>" . ($checkbox??'null') . "</td>\x0A";
					#src/form/CheckboxesWithField.hx:96: characters 6-16
					$i1 = 0;
					#src/form/CheckboxesWithField.hx:97: lines 97-100
					$_g23 = 0;
					$_g32 = $this->extraFields;
					while ($_g23 < $_g32->length) {
						#src/form/CheckboxesWithField.hx:97: characters 10-14
						$extr1 = ($_g32->arr[$_g23] ?? null);
						#src/form/CheckboxesWithField.hx:97: lines 97-100
						++$_g23;
						#src/form/CheckboxesWithField.hx:98: characters 7-169
						$s = ($s??'null') . "<td><input style=\"margin-left:12px\" type=\"text\" class=\"form-control\" name=\"" . ((($n??'null') . "_" . ($extr1->value??'null'))??'null') . "[]\" value=\"" . (((($extraValues->arr[$i1] ?? null) !== null ? ($extraValues->arr[$i1] ?? null) : ""))??'null') . "\"/></td>";
						#src/form/CheckboxesWithField.hx:99: characters 7-10
						++$i1;
					}

					#src/form/CheckboxesWithField.hx:101: characters 6-18
					$s = ($s??'null') . "</tr>";
					#src/form/CheckboxesWithField.hx:103: characters 6-9
					++$c;
				}

				#src/form/CheckboxesWithField.hx:105: characters 5-20
				$s = ($s??'null') . "</table>";
				#src/form/CheckboxesWithField.hx:106: characters 5-17
				$s = ($s??'null') . "</td>";
			}

			#src/form/CheckboxesWithField.hx:108: characters 4-26
			$s = ($s??'null') . "</tr></table>\x0A";
		}
		#src/form/CheckboxesWithField.hx:112: characters 3-11
		return $s;
	}
}

Boot::registerClass(CheckboxesWithField::class, 'form.CheckboxesWithField');
