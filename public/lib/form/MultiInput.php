<?php
/**
 * Generated by Haxe 4.0.0-rc.1+1fdd3d5
 */

namespace form;

use \php\Boot;
use \php\Web;
use \sugoi\form\FormElement;

/**
 * MultiInput
 * - - -
 * - - -
 * - - -
 */
class MultiInput extends FormElement {
	/**
	 * @var \Array_hx
	 */
	public $data;
	/**
	 * @var \Array_hx
	 */
	public $lines;

	/**
	 *
	 *
	 *  @param name -
	 *  @param label -
	 *  @param lines - name of various lines
	 *  @param values - list of fields in columns
	 * 
	 * @param string $name
	 * @param string $label
	 * @param \Array_hx $lines
	 * @param \Array_hx $data
	 * @param \Array_hx $values
	 * 
	 * @return void
	 */
	public function __construct ($name, $label, $lines, $data, $values = null) {
		#src/form/MultiInput.hx:24: characters 9-16
		parent::__construct();
		#src/form/MultiInput.hx:25: characters 9-28
		$this->value = $values;
		#src/form/MultiInput.hx:26: characters 9-27
		$this->lines = $lines;
		#src/form/MultiInput.hx:27: characters 9-25
		$this->data = $data;
		#src/form/MultiInput.hx:29: characters 9-25
		$this->name = $name;
		#src/form/MultiInput.hx:30: characters 9-27
		$this->label = $label;
	}

	/**
	 * @return void
	 */
	public function populate () {
		#src/form/MultiInput.hx:68: characters 9-19
		$this->value = new \Array_hx();
		#src/form/MultiInput.hx:69: characters 9-19
		$i = 0;
		#src/form/MultiInput.hx:70: lines 70-74
		$_g = 0;
		$_g1 = $this->lines;
		while ($_g < $_g1->length) {
			#src/form/MultiInput.hx:70: characters 14-15
			$l = ($_g1->arr[$_g] ?? null);
			#src/form/MultiInput.hx:70: lines 70-74
			++$_g;
			#src/form/MultiInput.hx:71: characters 13-86
			$v = Web::getParamValues(($this->parentForm->name??'null') . "_" . ($this->name??'null') . "_" . ($i??'null'));
			#src/form/MultiInput.hx:72: characters 13-26
			$_this = $this->value;
			$_this->arr[$_this->length] = $v;
			++$_this->length;

			#src/form/MultiInput.hx:73: characters 13-16
			++$i;
		}

	}

	/**
	 * @return string
	 */
	public function render () {
		#src/form/MultiInput.hx:39: characters 9-35
		$str = new \StringBuf();
		#src/form/MultiInput.hx:40: characters 9-72
		$str->add("<table class='table table-bordered table-condensed'>");
		#src/form/MultiInput.hx:41: characters 9-24
		$str->add("<tr>");
		#src/form/MultiInput.hx:42: characters 9-29
		$str->add("<th></th>");
		#src/form/MultiInput.hx:43: lines 43-45
		$_g = 0;
		$_g1 = $this->data;
		while ($_g < $_g1->length) {
			#src/form/MultiInput.hx:43: characters 13-14
			$f = ($_g1->arr[$_g] ?? null);
			#src/form/MultiInput.hx:43: lines 43-45
			++$_g;
			#src/form/MultiInput.hx:44: characters 13-44
			$str->add("<th>" . ($f->label??'null') . "</th>");
		}

		#src/form/MultiInput.hx:46: characters 9-24
		$str->add("<tr>");
		#src/form/MultiInput.hx:47: characters 9-19
		$i = 0;
		#src/form/MultiInput.hx:48: lines 48-60
		$_g2 = 0;
		$_g3 = $this->lines;
		while ($_g2 < $_g3->length) {
			#src/form/MultiInput.hx:48: characters 14-15
			$l = ($_g3->arr[$_g2] ?? null);
			#src/form/MultiInput.hx:48: lines 48-60
			++$_g2;
			#src/form/MultiInput.hx:49: characters 13-28
			$str->add("<tr>");
			#src/form/MultiInput.hx:50: characters 13-35
			$str->add("<th>" . ($l??'null') . "</th>");
			#src/form/MultiInput.hx:51: characters 13-21
			$a = 0;
			#src/form/MultiInput.hx:52: lines 52-57
			$_g21 = 0;
			$_g31 = $this->data;
			while ($_g21 < $_g31->length) {
				#src/form/MultiInput.hx:52: characters 17-18
				$f1 = ($_g31->arr[$_g21] ?? null);
				#src/form/MultiInput.hx:52: lines 52-57
				++$_g21;
				#src/form/MultiInput.hx:53: characters 17-28
				$v = "";
				#src/form/MultiInput.hx:54: characters 17-72
				if ((($this->value->arr[$i] ?? null) !== null) && ((($this->value->arr[$i] ?? null)->arr[$a] ?? null) !== null)) {
					#src/form/MultiInput.hx:54: characters 57-72
					$v = (($this->value->arr[$i] ?? null)->arr[$a] ?? null);
				}
				#src/form/MultiInput.hx:55: characters 17-121
				$str->add("<td><input class=\"form-control\" name=\"" . ($this->parentForm->name??'null') . "_" . ($this->name??'null') . "_" . ($i??'null') . "[]\" value=\"" . ($v??'null') . "\" /></td>");
				#src/form/MultiInput.hx:56: characters 17-20
				++$a;
			}

			#src/form/MultiInput.hx:58: characters 13-29
			$str->add("</tr>");
			#src/form/MultiInput.hx:59: characters 13-16
			++$i;
		}

		#src/form/MultiInput.hx:61: characters 9-28
		$str->add("</table>");
		#src/form/MultiInput.hx:62: characters 9-30
		return $str->b;
	}
}

Boot::registerClass(MultiInput::class, 'form.MultiInput');
